2025-01-30 08:19:33,964 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:19:33,978 p=1511788 u=dvalin n=ansible | TASK [terminate bad cpu type instance] ****************************************************************************************************************
2025-01-30 08:19:33,989 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:33,993 p=1511788 u=dvalin n=ansible | TASK [Abort, all we are doing is killing off a bad cpu type instance.] ********************************************************************************
2025-01-30 08:19:34,002 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:34,019 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:19:34,030 p=1511788 u=dvalin n=ansible | TASK [set_fact] ***************************************************************************************************************************************
2025-01-30 08:19:34,038 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:19:34,042 p=1511788 u=dvalin n=ansible | TASK [set ssh dash i file for ssh] ********************************************************************************************************************
2025-01-30 08:19:34,053 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:19:34,057 p=1511788 u=dvalin n=ansible | TASK [No ssh dash i file designated, default null string.] ********************************************************************************************
2025-01-30 08:19:34,066 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:34,083 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:19:34,094 p=1511788 u=dvalin n=ansible | TASK [preset terraform rtc to be false] ***************************************************************************************************************
2025-01-30 08:19:34,399 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:34,404 p=1511788 u=dvalin n=ansible | TASK [add the ssh line to the file] *******************************************************************************************************************
2025-01-30 08:19:34,597 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:34,601 p=1511788 u=dvalin n=ansible | TASK [aws_operations] *********************************************************************************************************************************
2025-01-30 08:19:34,642 p=1511788 u=dvalin n=ansible | [WARNING]: Collection amazon.aws does not support Ansible version 2.14.14

2025-01-30 08:19:34,658 p=1511788 u=dvalin n=ansible | [WARNING]: Collection community.aws does not support Ansible version 2.14.14

2025-01-30 08:19:34,688 p=1511788 u=dvalin n=ansible | TASK [aws_create : copy general tf files] *************************************************************************************************************
2025-01-30 08:19:35,259 p=1511788 u=dvalin n=ansible | changed: [localhost] => (item=vars.tf)
2025-01-30 08:19:35,265 p=1511788 u=dvalin n=ansible | TASK [aws_create : copy general tf files] *************************************************************************************************************
2025-01-30 08:19:35,575 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:35,579 p=1511788 u=dvalin n=ansible | TASK [aws_create : copy base main.] *******************************************************************************************************************
2025-01-30 08:19:35,935 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:35,940 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add tag info in.] ******************************************************************************************************************
2025-01-30 08:19:36,131 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:36,135 p=1511788 u=dvalin n=ansible | TASK [add in vars for networks] ***********************************************************************************************************************
2025-01-30 08:19:36,168 p=1511788 u=dvalin n=ansible | TASK [add_networks : local header] ********************************************************************************************************************
2025-01-30 08:19:36,359 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:36,363 p=1511788 u=dvalin n=ansible | TASK [add_networks : 2nd header] **********************************************************************************************************************
2025-01-30 08:19:36,554 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:36,558 p=1511788 u=dvalin n=ansible | TASK [add_networks : Single system first] *************************************************************************************************************
2025-01-30 08:19:36,749 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:36,753 p=1511788 u=dvalin n=ansible | TASK [add_networks : networked in same system] ********************************************************************************************************
2025-01-30 08:19:36,766 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:36,770 p=1511788 u=dvalin n=ansible | TASK [add_networks : networked different system] ******************************************************************************************************
2025-01-30 08:19:36,784 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:36,788 p=1511788 u=dvalin n=ansible | TASK [add_networks : Echo closing brace] **************************************************************************************************************
2025-01-30 08:19:36,979 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:36,983 p=1511788 u=dvalin n=ansible | TASK [add_networks : echo last line] ******************************************************************************************************************
2025-01-30 08:19:37,174 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:37,182 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add placement in] ******************************************************************************************************************
2025-01-30 08:19:37,195 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,199 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add vm creation in] ****************************************************************************************************************
2025-01-30 08:19:37,211 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,215 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add vm creation  in] ***************************************************************************************************************
2025-01-30 08:19:37,228 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,232 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add networking info] ***************************************************************************************************************
2025-01-30 08:19:37,428 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:37,432 p=1511788 u=dvalin n=ansible | TASK [aws_create : non spot vm] ***********************************************************************************************************************
2025-01-30 08:19:37,631 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:37,635 p=1511788 u=dvalin n=ansible | TASK [aws_create : non spot vm] ***********************************************************************************************************************
2025-01-30 08:19:37,649 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,653 p=1511788 u=dvalin n=ansible | TASK [aws_create : Non spot instances] ****************************************************************************************************************
2025-01-30 08:19:37,666 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,670 p=1511788 u=dvalin n=ansible | TASK [aws_create : spot instances] ********************************************************************************************************************
2025-01-30 08:19:37,682 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,686 p=1511788 u=dvalin n=ansible | TASK [aws_create : create the single system output file] **********************************************************************************************
2025-01-30 08:19:37,880 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:37,884 p=1511788 u=dvalin n=ansible | TASK [aws_create : Append for network] ****************************************************************************************************************
2025-01-30 08:19:37,898 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,902 p=1511788 u=dvalin n=ansible | TASK [aws_create : Handle disks] **********************************************************************************************************************
2025-01-30 08:19:37,924 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_disks.yml for localhost
2025-01-30 08:19:37,933 p=1511788 u=dvalin n=ansible | TASK [aws_create : Creat disks.tf] ********************************************************************************************************************
2025-01-30 08:19:37,948 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,952 p=1511788 u=dvalin n=ansible | TASK [aws_create : remove entry] **********************************************************************************************************************
2025-01-30 08:19:37,966 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,970 p=1511788 u=dvalin n=ansible | TASK [aws_create : replace the disks_tf file] *********************************************************************************************************
2025-01-30 08:19:37,984 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:37,988 p=1511788 u=dvalin n=ansible | TASK [aws_create : remove entry] **********************************************************************************************************************
2025-01-30 08:19:38,002 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,007 p=1511788 u=dvalin n=ansible | TASK [aws_create : replace the disks_tf file] *********************************************************************************************************
2025-01-30 08:19:38,020 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,025 p=1511788 u=dvalin n=ansible | TASK [aws_create : pbench setup] **********************************************************************************************************************
2025-01-30 08:19:38,039 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,043 p=1511788 u=dvalin n=ansible | TASK [aws_create : Handle disks, with network] ********************************************************************************************************
2025-01-30 08:19:38,057 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,061 p=1511788 u=dvalin n=ansible | TASK [aws_create : spot create the single system output file] *****************************************************************************************
2025-01-30 08:19:38,074 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,078 p=1511788 u=dvalin n=ansible | TASK [aws_create : Append for network] ****************************************************************************************************************
2025-01-30 08:19:38,090 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,095 p=1511788 u=dvalin n=ansible | TASK [aws_create : Handle disks, no network] **********************************************************************************************************
2025-01-30 08:19:38,108 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,112 p=1511788 u=dvalin n=ansible | TASK [aws_create : Handle disks, with network] ********************************************************************************************************
2025-01-30 08:19:38,125 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,129 p=1511788 u=dvalin n=ansible | TASK [aws_create : aws_get_id] ************************************************************************************************************************
2025-01-30 08:19:38,322 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:38,326 p=1511788 u=dvalin n=ansible | TASK [aws_create : aws_have_id] ***********************************************************************************************************************
2025-01-30 08:19:38,339 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:38,343 p=1511788 u=dvalin n=ansible | TASK [aws_create : obtain user info from aws] *********************************************************************************************************
2025-01-30 08:19:39,161 p=1511788 u=dvalin n=ansible | [WARNING]: boto3 < 1.28.0 is not supported or tested.  Some features may not work.

2025-01-30 08:19:39,161 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:19:39,165 p=1511788 u=dvalin n=ansible | TASK [aws_create : get the user name] *****************************************************************************************************************
2025-01-30 08:19:39,362 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:39,367 p=1511788 u=dvalin n=ansible | TASK [aws_create : record uname] **********************************************************************************************************************
2025-01-30 08:19:39,564 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:39,568 p=1511788 u=dvalin n=ansible | TASK [aws_create : Set the spot price] ****************************************************************************************************************
2025-01-30 08:19:39,764 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:39,768 p=1511788 u=dvalin n=ansible | TASK [aws_create : include spot info] *****************************************************************************************************************
2025-01-30 08:19:39,783 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:19:39,788 p=1511788 u=dvalin n=ansible | TASK [aws_create : include net dynamic info] **********************************************************************************************************
2025-01-30 08:19:39,803 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:19:39,807 p=1511788 u=dvalin n=ansible | TASK [Set up terraform vars non spot] *****************************************************************************************************************
2025-01-30 08:19:39,854 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : create private copy] ***********************************************************************************************************
2025-01-30 08:19:40,217 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:40,221 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Add tag vars info in.] *********************************************************************************************************
2025-01-30 08:19:40,414 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:40,419 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Substitute terraform vars] *****************************************************************************************************
2025-01-30 08:19:40,798 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:40,802 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Grab number of disks] **********************************************************************************************************
2025-01-30 08:19:40,998 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:41,021 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Grab disk type] ****************************************************************************************************************
2025-01-30 08:19:41,218 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:41,222 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Grab disk size] ****************************************************************************************************************
2025-01-30 08:19:41,419 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:41,423 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : obtain iops] *******************************************************************************************************************
2025-01-30 08:19:41,619 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:41,623 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : obtain tp] *********************************************************************************************************************
2025-01-30 08:19:41,818 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:41,823 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Update tfvars] *****************************************************************************************************************
2025-01-30 08:19:42,115 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:42,120 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : copy to workig_dir so we can cat it onto the end of main.tf] *******************************************************************
2025-01-30 08:19:42,133 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:42,137 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : copy to workig_dir so we can cat it onto the end of main.tf] *******************************************************************
2025-01-30 08:19:42,150 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:42,154 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Replace '_' with _rm vars] *****************************************************************************************************
2025-01-30 08:19:42,348 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:42,352 p=1511788 u=dvalin n=ansible | TASK [set_up_tf_vars : Move it back] ******************************************************************************************************************
2025-01-30 08:19:42,545 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:42,552 p=1511788 u=dvalin n=ansible | TASK [aws_create : grab aws create start time] ********************************************************************************************************
2025-01-30 08:19:42,742 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:42,746 p=1511788 u=dvalin n=ansible | TASK [aws_create : aws create server] *****************************************************************************************************************
2025-01-30 08:19:42,788 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_instance_create.yml for localhost
2025-01-30 08:19:42,822 p=1511788 u=dvalin n=ansible | TASK [aws_create : include_test_file] *****************************************************************************************************************
2025-01-30 08:19:42,838 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:19:42,843 p=1511788 u=dvalin n=ansible | TASK [aws_create : attempt to create spot instance] ***************************************************************************************************
2025-01-30 08:19:42,855 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:42,859 p=1511788 u=dvalin n=ansible | TASK [aws_create : Retrieve the status] ***************************************************************************************************************
2025-01-30 08:19:42,872 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:42,877 p=1511788 u=dvalin n=ansible | TASK [aws_create : record failure] ********************************************************************************************************************
2025-01-30 08:19:42,889 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:42,894 p=1511788 u=dvalin n=ansible | TASK [aws_create : Bail error] ************************************************************************************************************************
2025-01-30 08:19:42,906 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:42,911 p=1511788 u=dvalin n=ansible | TASK [aws_tf_create] **********************************************************************************************************************************
2025-01-30 08:19:42,943 p=1511788 u=dvalin n=ansible | TASK [tf_create : Init terraform tasks] ***************************************************************************************************************
2025-01-30 08:19:42,964 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/tf_create/tasks/tf_init.yml for localhost
2025-01-30 08:19:42,971 p=1511788 u=dvalin n=ansible | TASK [tf_create : Initialize terraform] ***************************************************************************************************************
2025-01-30 08:19:49,101 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:49,106 p=1511788 u=dvalin n=ansible | TASK [tf_create : Display terraform init output] ******************************************************************************************************
2025-01-30 08:19:49,125 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "init": {
        "changed": true,
        "cmd": "terraform init",
        "delta": "0:00:05.934521",
        "end": "2025-01-30 08:19:49.078846",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2025-01-30 08:19:43.144325",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "\u001b[0m\u001b[1mInitializing the backend...\u001b[0m\n\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m\n- Finding hashicorp/aws versions matching \">= 4.35.0\"...\n- Installing hashicorp/aws v5.84.0...\n- Installed hashicorp/aws v5.84.0 (signed by HashiCorp)\nTerraform has created a lock file \u001b[1m.terraform.lock.hcl\u001b[0m to record the provider\nselections it made above. Include this file in your version control repository\nso that Terraform can guarantee to make the same selections by default when\nyou run \"terraform init\" in the future.\u001b[0m\n\n\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m\n\u001b[0m\u001b[32m\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\nany changes that are required for your infrastructure. All Terraform commands\nshould now work.\n\nIf you ever set or change modules or backend configuration for Terraform,\nrerun this command to reinitialize your working directory. If you forget, other\ncommands will detect it and remind you to do so if necessary.\u001b[0m",
        "stdout_lines": [
            "\u001b[0m\u001b[1mInitializing the backend...\u001b[0m",
            "\u001b[0m\u001b[1mInitializing provider plugins...\u001b[0m",
            "- Finding hashicorp/aws versions matching \">= 4.35.0\"...",
            "- Installing hashicorp/aws v5.84.0...",
            "- Installed hashicorp/aws v5.84.0 (signed by HashiCorp)",
            "Terraform has created a lock file \u001b[1m.terraform.lock.hcl\u001b[0m to record the provider",
            "selections it made above. Include this file in your version control repository",
            "so that Terraform can guarantee to make the same selections by default when",
            "you run \"terraform init\" in the future.\u001b[0m",
            "",
            "\u001b[0m\u001b[1m\u001b[32mTerraform has been successfully initialized!\u001b[0m\u001b[32m\u001b[0m",
            "\u001b[0m\u001b[32m",
            "You may now begin working with Terraform. Try running \"terraform plan\" to see",
            "any changes that are required for your infrastructure. All Terraform commands",
            "should now work.",
            "",
            "If you ever set or change modules or backend configuration for Terraform,",
            "rerun this command to reinitialize your working directory. If you forget, other",
            "commands will detect it and remind you to do so if necessary.\u001b[0m"
        ]
    }
}
2025-01-30 08:19:49,129 p=1511788 u=dvalin n=ansible | TASK [tf_create : Create terraform workspace] *********************************************************************************************************
2025-01-30 08:19:51,015 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:51,020 p=1511788 u=dvalin n=ansible | TASK [tf_create : create workspace debug] *************************************************************************************************************
2025-01-30 08:19:51,038 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "cr_info": {
        "changed": true,
        "cmd": "terraform workspace new aws-debug_rhel-m5a.xlarge;\nterraform workspace select aws-debug_rhel-m5a.xlarge;\n",
        "delta": "0:00:01.688615",
        "end": "2025-01-30 08:19:50.993098",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2025-01-30 08:19:49.304483",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "\u001b[0m\u001b[32m\u001b[1mCreated and switched to workspace \"aws-debug_rhel-m5a.xlarge\"!\u001b[0m\u001b[32m\n\nYou're now on a new, empty workspace. Workspaces isolate their state,\nso if you run \"terraform plan\" Terraform will not see any existing state\nfor this configuration.\u001b[0m",
        "stdout_lines": [
            "\u001b[0m\u001b[32m\u001b[1mCreated and switched to workspace \"aws-debug_rhel-m5a.xlarge\"!\u001b[0m\u001b[32m",
            "",
            "You're now on a new, empty workspace. Workspaces isolate their state,",
            "so if you run \"terraform plan\" Terraform will not see any existing state",
            "for this configuration.\u001b[0m"
        ]
    }
}
2025-01-30 08:19:51,042 p=1511788 u=dvalin n=ansible | TASK [tf_create : Bail on create terraform workspace failure] *****************************************************************************************
2025-01-30 08:19:51,056 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:51,061 p=1511788 u=dvalin n=ansible | TASK [tf_create : Create terraform resources plan] ****************************************************************************************************
2025-01-30 08:19:54,134 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:19:54,138 p=1511788 u=dvalin n=ansible | TASK [tf_create : Display terraform plan] *************************************************************************************************************
2025-01-30 08:19:54,163 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "create_plan": {
        "changed": true,
        "cmd": "terraform plan -var-file=env.tfvars -out=plan.tfplan 2>&1 | tee /home/dvalin/fix_error_handling/debug/rhel/aws/m5a.xlarge_0/tf/terraform_plan.out\n",
        "delta": "0:00:02.873474",
        "end": "2025-01-30 08:19:54.108510",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2025-01-30 08:19:51.235036",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "\nTerraform used the selected providers to generate the following execution\nplan. Resource actions are indicated with the following symbols:\n  \u001b[32m+\u001b[0m create\u001b[0m\n\nTerraform will perform the following actions:\n\n\u001b[1m  # aws_default_route_table.zathras_df_rt_tbl\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_route_table\" \"zathras_df_rt_tbl\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m route                  = [\n          \u001b[32m+\u001b[0m\u001b[0m {\n              \u001b[32m+\u001b[0m\u001b[0m cidr_block                 = \"0.0.0.0/0\"\n              \u001b[32m+\u001b[0m\u001b[0m gateway_id                 = (known after apply)\n                \u001b[90m# (10 unchanged attributes hidden)\u001b[0m\u001b[0m\n            },\n        ]\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\n    }\n\n\u001b[1m  # aws_instance.ec2[\"0\"]\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_instance\" \"ec2\" {\n      \u001b[32m+\u001b[0m\u001b[0m ami                                  = \"ami-090295859abce72e8\"\n      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m associate_public_ip_address          = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                    = \"us-east-2a\"\n      \u001b[32m+\u001b[0m\u001b[0m cpu_core_count                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m cpu_threads_per_core                 = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m disable_api_stop                     = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m disable_api_termination              = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ebs_optimized                        = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m enable_primary_ipv6                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m get_password_data                    = false\n      \u001b[32m+\u001b[0m\u001b[0m host_id                              = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m host_resource_group_arn              = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m iam_instance_profile                 = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m instance_initiated_shutdown_behavior = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m instance_lifecycle                   = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m instance_state                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m instance_type                        = \"m5a.xlarge\"\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_address_count                   = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_addresses                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m key_name                             = \"DValin\"\n      \u001b[32m+\u001b[0m\u001b[0m monitoring                           = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m outpost_arn                          = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m password_data                        = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m placement_group                      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m placement_partition_number           = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m primary_network_interface_id         = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m private_dns                          = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m private_ip                           = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m public_dns                           = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m public_ip                            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m secondary_private_ips                = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m security_groups                      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m source_dest_check                    = true\n      \u001b[32m+\u001b[0m\u001b[0m spot_instance_request_id             = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id                            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m tags                                 = {\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\" = \"dvalin_debug-rhel-m5a.xlarge\"\n        }\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = {\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"Test\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Jirald\"      = \"dvalin\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Manager\"     = \"Managers Name\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"dvalin_debug-rhel-m5a.xlarge\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"dvalin\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"Rhel_regression\"\n          \u001b[32m+\u001b[0m\u001b[0m \"TicketID\"    = (known after apply)\n          \u001b[32m+\u001b[0m\u001b[0m \"User\"        = \"dvalin\"\n        }\n      \u001b[32m+\u001b[0m\u001b[0m tenancy                              = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m user_data                            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m user_data_base64                     = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m user_data_replace_on_change          = false\n      \u001b[32m+\u001b[0m\u001b[0m vpc_security_group_ids               = (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m capacity_reservation_specification (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m cpu_options (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m ebs_block_device (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m enclave_options (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m ephemeral_block_device (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m instance_market_options (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m maintenance_options (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m metadata_options (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m network_interface (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_name_options (known after apply)\n\n      \u001b[32m+\u001b[0m\u001b[0m root_block_device (known after apply)\n    }\n\n\u001b[1m  # aws_internet_gateway.zathras_gw\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_internet_gateway\" \"zathras_gw\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m id       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m owner_id = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m tags_all = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id   = (known after apply)\n    }\n\n\u001b[1m  # aws_route_table_association.zathras_aws_rta\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"zathras_aws_rta\" {\n      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)\n    }\n\n\u001b[1m  # aws_security_group.zathras_aws_prvt_sg\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"zathras_aws_prvt_sg\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Managed by Terraform\"\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = [\n          \u001b[32m+\u001b[0m\u001b[0m {\n              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [\n                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\n                ]\n              \u001b[32m+\u001b[0m\u001b[0m from_port        = 0\n              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []\n              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []\n              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"-1\"\n              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []\n              \u001b[32m+\u001b[0m\u001b[0m self             = false\n              \u001b[32m+\u001b[0m\u001b[0m to_port          = 0\n                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m\n            },\n        ]\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = [\n          \u001b[32m+\u001b[0m\u001b[0m {\n              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [\n                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\n                ]\n              \u001b[32m+\u001b[0m\u001b[0m from_port        = 0\n              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []\n              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []\n              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"tcp\"\n              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []\n              \u001b[32m+\u001b[0m\u001b[0m self             = false\n              \u001b[32m+\u001b[0m\u001b[0m to_port          = 65535\n                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m\n            },\n        ]\n      \u001b[32m+\u001b[0m\u001b[0m name                   = \"zathras_sg\"\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\n    }\n\n\u001b[1m  # aws_security_group.zathras_aws_sg\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"zathras_aws_sg\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m description            = \"Managed by Terraform\"\n      \u001b[32m+\u001b[0m\u001b[0m egress                 = [\n          \u001b[32m+\u001b[0m\u001b[0m {\n              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [\n                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\n                ]\n              \u001b[32m+\u001b[0m\u001b[0m from_port        = 0\n              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []\n              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []\n              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"-1\"\n              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []\n              \u001b[32m+\u001b[0m\u001b[0m self             = false\n              \u001b[32m+\u001b[0m\u001b[0m to_port          = 0\n                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m\n            },\n        ]\n      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ingress                = [\n          \u001b[32m+\u001b[0m\u001b[0m {\n              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [\n                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",\n                ]\n              \u001b[32m+\u001b[0m\u001b[0m from_port        = 22\n              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []\n              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []\n              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"tcp\"\n              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []\n              \u001b[32m+\u001b[0m\u001b[0m self             = false\n              \u001b[32m+\u001b[0m\u001b[0m to_port          = 22\n                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m\n            },\n        ]\n      \u001b[32m+\u001b[0m\u001b[0m name                   = \"zathras_sg\"\n      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false\n      \u001b[32m+\u001b[0m\u001b[0m tags_all               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)\n    }\n\n\u001b[1m  # aws_subnet.zathras_prvt_sn\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"zathras_prvt_sn\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.0.16.0/20\"\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\n    }\n\n\u001b[1m  # aws_subnet.zathras_sn\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"zathras_sn\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"\n      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"170.0.16.0/20\"\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false\n      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false\n      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false\n      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = true\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)\n    }\n\n\u001b[1m  # aws_vpc.zathras_prvt_vpc\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_vpc\" \"zathras_prvt_vpc\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                           = \"10.0.0.0/16\"\n      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m default_security_group_id            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m dhcp_options_id                      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_hostnames                 = false\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_support                   = false\n      \u001b[32m+\u001b[0m\u001b[0m enable_network_address_usage_metrics = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m instance_tenancy                     = \"default\"\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_association_id                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block                      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_network_border_group = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m main_route_table_id                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                             = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = (known after apply)\n    }\n\n\u001b[1m  # aws_vpc.zathras_vpc\u001b[0m will be created\n\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_vpc\" \"zathras_vpc\" {\n      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m cidr_block                           = \"170.0.0.0/16\"\n      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id               = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m default_security_group_id            = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m dhcp_options_id                      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_hostnames                 = true\n      \u001b[32m+\u001b[0m\u001b[0m enable_dns_support                   = true\n      \u001b[32m+\u001b[0m\u001b[0m enable_network_address_usage_metrics = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m instance_tenancy                     = \"default\"\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_association_id                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block                      = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_network_border_group = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m main_route_table_id                  = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m owner_id                             = (known after apply)\n      \u001b[32m+\u001b[0m\u001b[0m tags                                 = {\n          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"Test\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Jirald\"      = \"dvalin\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Manager\"     = \"Managers Name\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"dvalin\"\n          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"Rhel_regression\"\n          \u001b[32m+\u001b[0m\u001b[0m \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n          \u001b[32m+\u001b[0m\u001b[0m \"User\"        = \"dvalin\"\n        }\n      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = (known after apply)\n    }\n\n\u001b[1mPlan:\u001b[0m 10 to add, 0 to change, 0 to destroy.\n\u001b[0m\nChanges to Outputs:\n  \u001b[32m+\u001b[0m\u001b[0m aws_instance_id0 = (known after apply)\n  \u001b[32m+\u001b[0m\u001b[0m aws_zoneid0      = \"us-east-2a\"\n  \u001b[32m+\u001b[0m\u001b[0m public_dns_host0 = (known after apply)\n\u001b[90m\n─────────────────────────────────────────────────────────────────────────────\u001b[0m\n\nSaved the plan to: plan.tfplan\n\nTo perform exactly these actions, run the following command to apply:\n    terraform apply \"plan.tfplan\"",
        "stdout_lines": [
            "",
            "Terraform used the selected providers to generate the following execution",
            "plan. Resource actions are indicated with the following symbols:",
            "  \u001b[32m+\u001b[0m create\u001b[0m",
            "",
            "Terraform will perform the following actions:",
            "",
            "\u001b[1m  # aws_default_route_table.zathras_df_rt_tbl\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_default_route_table\" \"zathras_df_rt_tbl\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m route                  = [",
            "          \u001b[32m+\u001b[0m\u001b[0m {",
            "              \u001b[32m+\u001b[0m\u001b[0m cidr_block                 = \"0.0.0.0/0\"",
            "              \u001b[32m+\u001b[0m\u001b[0m gateway_id                 = (known after apply)",
            "                \u001b[90m# (10 unchanged attributes hidden)\u001b[0m\u001b[0m",
            "            },",
            "        ]",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_instance.ec2[\"0\"]\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_instance\" \"ec2\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m ami                                  = \"ami-090295859abce72e8\"",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m associate_public_ip_address          = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m availability_zone                    = \"us-east-2a\"",
            "      \u001b[32m+\u001b[0m\u001b[0m cpu_core_count                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m cpu_threads_per_core                 = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m disable_api_stop                     = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m disable_api_termination              = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ebs_optimized                        = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_primary_ipv6                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m get_password_data                    = false",
            "      \u001b[32m+\u001b[0m\u001b[0m host_id                              = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m host_resource_group_arn              = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m iam_instance_profile                 = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_initiated_shutdown_behavior = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_lifecycle                   = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_state                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_type                        = \"m5a.xlarge\"",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_address_count                   = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_addresses                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m key_name                             = \"DValin\"",
            "      \u001b[32m+\u001b[0m\u001b[0m monitoring                           = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m outpost_arn                          = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m password_data                        = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m placement_group                      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m placement_partition_number           = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m primary_network_interface_id         = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m private_dns                          = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m private_ip                           = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m public_dns                           = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m public_ip                            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m secondary_private_ips                = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m security_groups                      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m source_dest_check                    = true",
            "      \u001b[32m+\u001b[0m\u001b[0m spot_instance_request_id             = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m subnet_id                            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m tags                                 = {",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Name\" = \"dvalin_debug-rhel-m5a.xlarge\"",
            "        }",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = {",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"Test\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Jirald\"      = \"dvalin\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Manager\"     = \"Managers Name\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Name\"        = \"dvalin_debug-rhel-m5a.xlarge\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"dvalin\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"Rhel_regression\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"TicketID\"    = (known after apply)",
            "          \u001b[32m+\u001b[0m\u001b[0m \"User\"        = \"dvalin\"",
            "        }",
            "      \u001b[32m+\u001b[0m\u001b[0m tenancy                              = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m user_data                            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m user_data_base64                     = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m user_data_replace_on_change          = false",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_security_group_ids               = (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m capacity_reservation_specification (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m cpu_options (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m ebs_block_device (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m enclave_options (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m ephemeral_block_device (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_market_options (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m maintenance_options (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m metadata_options (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m network_interface (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m private_dns_name_options (known after apply)",
            "",
            "      \u001b[32m+\u001b[0m\u001b[0m root_block_device (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_internet_gateway.zathras_gw\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_internet_gateway\" \"zathras_gw\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m id       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_id   = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_route_table_association.zathras_aws_rta\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_route_table_association\" \"zathras_aws_rta\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m id             = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m route_table_id = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m subnet_id      = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_security_group.zathras_aws_prvt_sg\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"zathras_aws_prvt_sg\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m description            = \"Managed by Terraform\"",
            "      \u001b[32m+\u001b[0m\u001b[0m egress                 = [",
            "          \u001b[32m+\u001b[0m\u001b[0m {",
            "              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [",
            "                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",",
            "                ]",
            "              \u001b[32m+\u001b[0m\u001b[0m from_port        = 0",
            "              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []",
            "              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"-1\"",
            "              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m self             = false",
            "              \u001b[32m+\u001b[0m\u001b[0m to_port          = 0",
            "                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m",
            "            },",
            "        ]",
            "      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ingress                = [",
            "          \u001b[32m+\u001b[0m\u001b[0m {",
            "              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [",
            "                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",",
            "                ]",
            "              \u001b[32m+\u001b[0m\u001b[0m from_port        = 0",
            "              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []",
            "              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"tcp\"",
            "              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m self             = false",
            "              \u001b[32m+\u001b[0m\u001b[0m to_port          = 65535",
            "                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m",
            "            },",
            "        ]",
            "      \u001b[32m+\u001b[0m\u001b[0m name                   = \"zathras_sg\"",
            "      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_security_group.zathras_aws_sg\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_security_group\" \"zathras_aws_sg\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                    = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m description            = \"Managed by Terraform\"",
            "      \u001b[32m+\u001b[0m\u001b[0m egress                 = [",
            "          \u001b[32m+\u001b[0m\u001b[0m {",
            "              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [",
            "                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",",
            "                ]",
            "              \u001b[32m+\u001b[0m\u001b[0m from_port        = 0",
            "              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []",
            "              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"-1\"",
            "              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m self             = false",
            "              \u001b[32m+\u001b[0m\u001b[0m to_port          = 0",
            "                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m",
            "            },",
            "        ]",
            "      \u001b[32m+\u001b[0m\u001b[0m id                     = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ingress                = [",
            "          \u001b[32m+\u001b[0m\u001b[0m {",
            "              \u001b[32m+\u001b[0m\u001b[0m cidr_blocks      = [",
            "                  \u001b[32m+\u001b[0m\u001b[0m \"0.0.0.0/0\",",
            "                ]",
            "              \u001b[32m+\u001b[0m\u001b[0m from_port        = 22",
            "              \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_blocks = []",
            "              \u001b[32m+\u001b[0m\u001b[0m prefix_list_ids  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m protocol         = \"tcp\"",
            "              \u001b[32m+\u001b[0m\u001b[0m security_groups  = []",
            "              \u001b[32m+\u001b[0m\u001b[0m self             = false",
            "              \u001b[32m+\u001b[0m\u001b[0m to_port          = 22",
            "                \u001b[90m# (1 unchanged attribute hidden)\u001b[0m\u001b[0m",
            "            },",
            "        ]",
            "      \u001b[32m+\u001b[0m\u001b[0m name                   = \"zathras_sg\"",
            "      \u001b[32m+\u001b[0m\u001b[0m name_prefix            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m revoke_rules_on_delete = false",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_id                 = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_subnet.zathras_prvt_sn\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"zathras_prvt_sn\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false",
            "      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"",
            "      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"10.0.16.0/20\"",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false",
            "      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false",
            "      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = false",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_subnet.zathras_sn\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_subnet\" \"zathras_sn\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                                            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m assign_ipv6_address_on_creation                = false",
            "      \u001b[32m+\u001b[0m\u001b[0m availability_zone                              = \"us-east-2a\"",
            "      \u001b[32m+\u001b[0m\u001b[0m availability_zone_id                           = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m cidr_block                                     = \"170.0.16.0/20\"",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_dns64                                   = false",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_a_record_on_launch    = false",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_resource_name_dns_aaaa_record_on_launch = false",
            "      \u001b[32m+\u001b[0m\u001b[0m id                                             = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_association_id                 = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_native                                    = false",
            "      \u001b[32m+\u001b[0m\u001b[0m map_public_ip_on_launch                        = true",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id                                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m private_dns_hostname_type_on_launch            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all                                       = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m vpc_id                                         = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_vpc.zathras_prvt_vpc\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_vpc\" \"zathras_prvt_vpc\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m cidr_block                           = \"10.0.0.0/16\"",
            "      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m default_security_group_id            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m dhcp_options_id                      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_dns_hostnames                 = false",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_dns_support                   = false",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_network_address_usage_metrics = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_tenancy                     = \"default\"",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_association_id                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block                      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_network_border_group = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m main_route_table_id                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id                             = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = (known after apply)",
            "    }",
            "",
            "\u001b[1m  # aws_vpc.zathras_vpc\u001b[0m will be created",
            "\u001b[0m  \u001b[32m+\u001b[0m\u001b[0m resource \"aws_vpc\" \"zathras_vpc\" {",
            "      \u001b[32m+\u001b[0m\u001b[0m arn                                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m cidr_block                           = \"170.0.0.0/16\"",
            "      \u001b[32m+\u001b[0m\u001b[0m default_network_acl_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m default_route_table_id               = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m default_security_group_id            = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m dhcp_options_id                      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_dns_hostnames                 = true",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_dns_support                   = true",
            "      \u001b[32m+\u001b[0m\u001b[0m enable_network_address_usage_metrics = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m id                                   = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m instance_tenancy                     = \"default\"",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_association_id                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block                      = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m ipv6_cidr_block_network_border_group = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m main_route_table_id                  = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m owner_id                             = (known after apply)",
            "      \u001b[32m+\u001b[0m\u001b[0m tags                                 = {",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Environment\" = \"Test\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Jirald\"      = \"dvalin\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Manager\"     = \"Managers Name\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Owner\"       = \"dvalin\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"Project\"     = \"Rhel_regression\"",
            "          \u001b[32m+\u001b[0m\u001b[0m \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "          \u001b[32m+\u001b[0m\u001b[0m \"User\"        = \"dvalin\"",
            "        }",
            "      \u001b[32m+\u001b[0m\u001b[0m tags_all                             = (known after apply)",
            "    }",
            "",
            "\u001b[1mPlan:\u001b[0m 10 to add, 0 to change, 0 to destroy.",
            "\u001b[0m",
            "Changes to Outputs:",
            "  \u001b[32m+\u001b[0m\u001b[0m aws_instance_id0 = (known after apply)",
            "  \u001b[32m+\u001b[0m\u001b[0m aws_zoneid0      = \"us-east-2a\"",
            "  \u001b[32m+\u001b[0m\u001b[0m public_dns_host0 = (known after apply)",
            "\u001b[90m",
            "─────────────────────────────────────────────────────────────────────────────\u001b[0m",
            "",
            "Saved the plan to: plan.tfplan",
            "",
            "To perform exactly these actions, run the following command to apply:",
            "    terraform apply \"plan.tfplan\""
        ]
    }
}
2025-01-30 08:19:54,167 p=1511788 u=dvalin n=ansible | TASK [tf_create : Bail on failure to create the terraform plan] ***************************************************************************************
2025-01-30 08:19:54,182 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:19:54,187 p=1511788 u=dvalin n=ansible | TASK [tf_create : terraform apply tasks] **************************************************************************************************************
2025-01-30 08:19:54,206 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/tf_create/tasks/tf_apply.yml for localhost
2025-01-30 08:19:54,219 p=1511788 u=dvalin n=ansible | TASK [tf_create : Create resources] *******************************************************************************************************************
2025-01-30 08:20:33,539 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:33,543 p=1511788 u=dvalin n=ansible | TASK [tf_create : Report tf create] *******************************************************************************************************************
2025-01-30 08:20:33,562 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "create": {
        "changed": true,
        "cmd": "terraform workspace select aws-debug_rhel-m5a.xlarge\nterraform apply plan.tfplan 2>&1 | tee /home/dvalin/fix_error_handling/debug/rhel/aws/m5a.xlarge_0/tf/terraform_apply.out\n",
        "delta": "0:00:39.113034",
        "end": "2025-01-30 08:20:33.513238",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2025-01-30 08:19:54.400204",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "\u001b[0m\u001b[1maws_vpc.zathras_prvt_vpc: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_vpc.zathras_vpc: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_vpc.zathras_vpc: Still creating... [10s elapsed]\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_vpc.zathras_prvt_vpc: Still creating... [10s elapsed]\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_vpc.zathras_vpc: Creation complete after 12s [id=vpc-0af2aed153bf0de7b]\u001b[0m\n\u001b[0m\u001b[1maws_internet_gateway.zathras_gw: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_subnet.zathras_sn: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_security_group.zathras_aws_sg: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_vpc.zathras_prvt_vpc: Creation complete after 12s [id=vpc-0686a27fb4618677e]\u001b[0m\n\u001b[0m\u001b[1maws_subnet.zathras_prvt_sn: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_security_group.zathras_aws_prvt_sg: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_internet_gateway.zathras_gw: Creation complete after 0s [id=igw-0084cf1cb64f39162]\u001b[0m\n\u001b[0m\u001b[1maws_default_route_table.zathras_df_rt_tbl: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_subnet.zathras_prvt_sn: Creation complete after 1s [id=subnet-038b748a57c72acd7]\u001b[0m\n\u001b[0m\u001b[1maws_default_route_table.zathras_df_rt_tbl: Creation complete after 1s [id=rtb-0861da88efb0eefed]\u001b[0m\n\u001b[0m\u001b[1maws_security_group.zathras_aws_prvt_sg: Creation complete after 3s [id=sg-0e022a8f304fd345f]\u001b[0m\n\u001b[0m\u001b[1maws_security_group.zathras_aws_sg: Creation complete after 3s [id=sg-075f7cbbdab50dd8b]\u001b[0m\n\u001b[0m\u001b[1maws_subnet.zathras_sn: Still creating... [10s elapsed]\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_subnet.zathras_sn: Creation complete after 11s [id=subnet-0d42aa087d71e30e4]\u001b[0m\n\u001b[0m\u001b[1maws_route_table_association.zathras_aws_rta: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_instance.ec2[\"0\"]: Creating...\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_route_table_association.zathras_aws_rta: Creation complete after 0s [id=rtbassoc-02eca3b5babe4c160]\u001b[0m\n\u001b[0m\u001b[1maws_instance.ec2[\"0\"]: Still creating... [10s elapsed]\u001b[0m\u001b[0m\n\u001b[0m\u001b[1maws_instance.ec2[\"0\"]: Creation complete after 12s [id=i-0c41f579d4ea0856b]\u001b[0m\n\u001b[0m\u001b[1m\u001b[32m\nApply complete! Resources: 10 added, 0 changed, 0 destroyed.\n\u001b[0m\u001b[0m\u001b[1m\u001b[32m\nOutputs:\n\n\u001b[0maws_instance_id0 = \"i-0c41f579d4ea0856b\"\naws_zoneid0 = \"us-east-2a\"\npublic_dns_host0 = \"ec2-52-14-118-191.us-east-2.compute.amazonaws.com\"",
        "stdout_lines": [
            "\u001b[0m\u001b[1maws_vpc.zathras_prvt_vpc: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_vpc.zathras_vpc: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_vpc.zathras_vpc: Still creating... [10s elapsed]\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_vpc.zathras_prvt_vpc: Still creating... [10s elapsed]\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_vpc.zathras_vpc: Creation complete after 12s [id=vpc-0af2aed153bf0de7b]\u001b[0m",
            "\u001b[0m\u001b[1maws_internet_gateway.zathras_gw: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_subnet.zathras_sn: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_security_group.zathras_aws_sg: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_vpc.zathras_prvt_vpc: Creation complete after 12s [id=vpc-0686a27fb4618677e]\u001b[0m",
            "\u001b[0m\u001b[1maws_subnet.zathras_prvt_sn: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_security_group.zathras_aws_prvt_sg: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_internet_gateway.zathras_gw: Creation complete after 0s [id=igw-0084cf1cb64f39162]\u001b[0m",
            "\u001b[0m\u001b[1maws_default_route_table.zathras_df_rt_tbl: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_subnet.zathras_prvt_sn: Creation complete after 1s [id=subnet-038b748a57c72acd7]\u001b[0m",
            "\u001b[0m\u001b[1maws_default_route_table.zathras_df_rt_tbl: Creation complete after 1s [id=rtb-0861da88efb0eefed]\u001b[0m",
            "\u001b[0m\u001b[1maws_security_group.zathras_aws_prvt_sg: Creation complete after 3s [id=sg-0e022a8f304fd345f]\u001b[0m",
            "\u001b[0m\u001b[1maws_security_group.zathras_aws_sg: Creation complete after 3s [id=sg-075f7cbbdab50dd8b]\u001b[0m",
            "\u001b[0m\u001b[1maws_subnet.zathras_sn: Still creating... [10s elapsed]\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_subnet.zathras_sn: Creation complete after 11s [id=subnet-0d42aa087d71e30e4]\u001b[0m",
            "\u001b[0m\u001b[1maws_route_table_association.zathras_aws_rta: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_instance.ec2[\"0\"]: Creating...\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_route_table_association.zathras_aws_rta: Creation complete after 0s [id=rtbassoc-02eca3b5babe4c160]\u001b[0m",
            "\u001b[0m\u001b[1maws_instance.ec2[\"0\"]: Still creating... [10s elapsed]\u001b[0m\u001b[0m",
            "\u001b[0m\u001b[1maws_instance.ec2[\"0\"]: Creation complete after 12s [id=i-0c41f579d4ea0856b]\u001b[0m",
            "\u001b[0m\u001b[1m\u001b[32m",
            "Apply complete! Resources: 10 added, 0 changed, 0 destroyed.",
            "\u001b[0m\u001b[0m\u001b[1m\u001b[32m",
            "Outputs:",
            "",
            "\u001b[0maws_instance_id0 = \"i-0c41f579d4ea0856b\"",
            "aws_zoneid0 = \"us-east-2a\"",
            "public_dns_host0 = \"ec2-52-14-118-191.us-east-2.compute.amazonaws.com\""
        ]
    }
}
2025-01-30 08:20:33,566 p=1511788 u=dvalin n=ansible | TASK [tf_create : Save the tf operation return code, success] *****************************************************************************************
2025-01-30 08:20:33,767 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:33,775 p=1511788 u=dvalin n=ansible | TASK [aws_create : wait for dns name to appear.] ******************************************************************************************************
2025-01-30 08:20:33,792 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_wait_for_dns.yml for localhost
2025-01-30 08:20:33,800 p=1511788 u=dvalin n=ansible | TASK [aws_create : wait for dns name to appear.] ******************************************************************************************************
2025-01-30 08:20:33,999 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:34,004 p=1511788 u=dvalin n=ansible | TASK [aws_create : wait for dns name to appear.] ******************************************************************************************************
2025-01-30 08:20:34,017 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:34,021 p=1511788 u=dvalin n=ansible | TASK [Present terraform data.] ************************************************************************************************************************
2025-01-30 08:20:34,055 p=1511788 u=dvalin n=ansible | TASK [tf_show : pull tf data] *************************************************************************************************************************
2025-01-30 08:20:37,197 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:37,202 p=1511788 u=dvalin n=ansible | TASK [tf_show : pull tf data for display] *************************************************************************************************************
2025-01-30 08:20:40,355 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:40,360 p=1511788 u=dvalin n=ansible | TASK [tf_show : Present terraform data] ***************************************************************************************************************
2025-01-30 08:20:40,384 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "tf_data": {
        "changed": true,
        "cmd": "terraform show",
        "delta": "0:00:02.954185",
        "end": "2025-01-30 08:20:40.329585",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2025-01-30 08:20:37.375400",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "# aws_default_route_table.zathras_df_rt_tbl:\nresource \"aws_default_route_table\" \"zathras_df_rt_tbl\" {\n    arn                    = \"arn:aws:ec2:us-east-2:452958939641:route-table/rtb-0861da88efb0eefed\"\n    default_route_table_id = \"rtb-0861da88efb0eefed\"\n    id                     = \"rtb-0861da88efb0eefed\"\n    owner_id               = \"452958939641\"\n    route                  = [\n        {\n            cidr_block                 = \"0.0.0.0/0\"\n            core_network_arn           = \u001b[90mnull\u001b[0m\u001b[0m\n            destination_prefix_list_id = \u001b[90mnull\u001b[0m\u001b[0m\n            egress_only_gateway_id     = \u001b[90mnull\u001b[0m\u001b[0m\n            gateway_id                 = \"igw-0084cf1cb64f39162\"\n            instance_id                = \u001b[90mnull\u001b[0m\u001b[0m\n            ipv6_cidr_block            = \u001b[90mnull\u001b[0m\u001b[0m\n            nat_gateway_id             = \u001b[90mnull\u001b[0m\u001b[0m\n            network_interface_id       = \u001b[90mnull\u001b[0m\u001b[0m\n            transit_gateway_id         = \u001b[90mnull\u001b[0m\u001b[0m\n            vpc_endpoint_id            = \u001b[90mnull\u001b[0m\u001b[0m\n            vpc_peering_connection_id  = \u001b[90mnull\u001b[0m\u001b[0m\n        },\n    ]\n    tags_all               = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    vpc_id                 = \"vpc-0af2aed153bf0de7b\"\n}\n\n# aws_instance.ec2[\"0\"]:\nresource \"aws_instance\" \"ec2\" {\n    ami                                  = \"ami-090295859abce72e8\"\n    arn                                  = \"arn:aws:ec2:us-east-2:452958939641:instance/i-0c41f579d4ea0856b\"\n    associate_public_ip_address          = true\n    availability_zone                    = \"us-east-2a\"\n    cpu_core_count                       = 2\n    cpu_threads_per_core                 = 2\n    disable_api_stop                     = false\n    disable_api_termination              = false\n    ebs_optimized                        = false\n    get_password_data                    = false\n    hibernation                          = false\n    host_id                              = \u001b[90mnull\u001b[0m\u001b[0m\n    iam_instance_profile                 = \u001b[90mnull\u001b[0m\u001b[0m\n    id                                   = \"i-0c41f579d4ea0856b\"\n    instance_initiated_shutdown_behavior = \"stop\"\n    instance_lifecycle                   = \u001b[90mnull\u001b[0m\u001b[0m\n    instance_state                       = \"running\"\n    instance_type                        = \"m5a.xlarge\"\n    ipv6_address_count                   = 0\n    ipv6_addresses                       = []\n    key_name                             = \"DValin\"\n    monitoring                           = false\n    outpost_arn                          = \u001b[90mnull\u001b[0m\u001b[0m\n    password_data                        = \u001b[90mnull\u001b[0m\u001b[0m\n    placement_group                      = \u001b[90mnull\u001b[0m\u001b[0m\n    placement_partition_number           = 0\n    primary_network_interface_id         = \"eni-0e6ff92cafc673c2b\"\n    private_dns                          = \"ip-170-0-16-53.us-east-2.compute.internal\"\n    private_ip                           = \"170.0.16.53\"\n    public_dns                           = \"ec2-52-14-118-191.us-east-2.compute.amazonaws.com\"\n    public_ip                            = \"52.14.118.191\"\n    secondary_private_ips                = []\n    security_groups                      = []\n    source_dest_check                    = true\n    spot_instance_request_id             = \u001b[90mnull\u001b[0m\u001b[0m\n    subnet_id                            = \"subnet-0d42aa087d71e30e4\"\n    tags                                 = {\n        \"Name\" = \"dvalin_debug-rhel-m5a.xlarge\"\n    }\n    tags_all                             = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Name\"        = \"dvalin_debug-rhel-m5a.xlarge\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    tenancy                              = \"default\"\n    user_data_replace_on_change          = false\n    vpc_security_group_ids               = [\n        \"sg-075f7cbbdab50dd8b\",\n    ]\n\n    capacity_reservation_specification {\n        capacity_reservation_preference = \"open\"\n    }\n\n    cpu_options {\n        amd_sev_snp      = \u001b[90mnull\u001b[0m\u001b[0m\n        core_count       = 2\n        threads_per_core = 2\n    }\n\n    enclave_options {\n        enabled = false\n    }\n\n    maintenance_options {\n        auto_recovery = \"default\"\n    }\n\n    metadata_options {\n        http_endpoint               = \"enabled\"\n        http_protocol_ipv6          = \"disabled\"\n        http_put_response_hop_limit = 1\n        http_tokens                 = \"optional\"\n        instance_metadata_tags      = \"disabled\"\n    }\n\n    private_dns_name_options {\n        enable_resource_name_dns_a_record    = false\n        enable_resource_name_dns_aaaa_record = false\n        hostname_type                        = \"ip-name\"\n    }\n\n    root_block_device {\n        delete_on_termination = true\n        device_name           = \"/dev/sda1\"\n        encrypted             = false\n        iops                  = 3000\n        kms_key_id            = \u001b[90mnull\u001b[0m\u001b[0m\n        tags                  = {\n            \"Environment\" = \"Test\"\n            \"Jirald\"      = \"dvalin\"\n            \"Manager\"     = \"Managers Name\"\n            \"Owner\"       = \"dvalin\"\n            \"Project\"     = \"Rhel_regression\"\n            \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n            \"User\"        = \"dvalin\"\n        }\n        tags_all              = {\n            \"Environment\" = \"Test\"\n            \"Jirald\"      = \"dvalin\"\n            \"Manager\"     = \"Managers Name\"\n            \"Owner\"       = \"dvalin\"\n            \"Project\"     = \"Rhel_regression\"\n            \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n            \"User\"        = \"dvalin\"\n        }\n        throughput            = 125\n        volume_id             = \"vol-09c55963b732000da\"\n        volume_size           = 10\n        volume_type           = \"gp3\"\n    }\n}\n\n# aws_internet_gateway.zathras_gw:\nresource \"aws_internet_gateway\" \"zathras_gw\" {\n    arn      = \"arn:aws:ec2:us-east-2:452958939641:internet-gateway/igw-0084cf1cb64f39162\"\n    id       = \"igw-0084cf1cb64f39162\"\n    owner_id = \"452958939641\"\n    tags_all = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    vpc_id   = \"vpc-0af2aed153bf0de7b\"\n}\n\n# aws_route_table_association.zathras_aws_rta:\nresource \"aws_route_table_association\" \"zathras_aws_rta\" {\n    gateway_id     = \u001b[90mnull\u001b[0m\u001b[0m\n    id             = \"rtbassoc-02eca3b5babe4c160\"\n    route_table_id = \"rtb-0861da88efb0eefed\"\n    subnet_id      = \"subnet-0d42aa087d71e30e4\"\n}\n\n# aws_security_group.zathras_aws_prvt_sg:\nresource \"aws_security_group\" \"zathras_aws_prvt_sg\" {\n    arn                    = \"arn:aws:ec2:us-east-2:452958939641:security-group/sg-0e022a8f304fd345f\"\n    description            = \"Managed by Terraform\"\n    egress                 = [\n        {\n            cidr_blocks      = [\n                \"0.0.0.0/0\",\n            ]\n            description      = \u001b[90mnull\u001b[0m\u001b[0m\n            from_port        = 0\n            ipv6_cidr_blocks = []\n            prefix_list_ids  = []\n            protocol         = \"-1\"\n            security_groups  = []\n            self             = false\n            to_port          = 0\n        },\n    ]\n    id                     = \"sg-0e022a8f304fd345f\"\n    ingress                = [\n        {\n            cidr_blocks      = [\n                \"0.0.0.0/0\",\n            ]\n            description      = \u001b[90mnull\u001b[0m\u001b[0m\n            from_port        = 0\n            ipv6_cidr_blocks = []\n            prefix_list_ids  = []\n            protocol         = \"tcp\"\n            security_groups  = []\n            self             = false\n            to_port          = 65535\n        },\n    ]\n    name                   = \"zathras_sg\"\n    name_prefix            = \u001b[90mnull\u001b[0m\u001b[0m\n    owner_id               = \"452958939641\"\n    revoke_rules_on_delete = false\n    tags_all               = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    vpc_id                 = \"vpc-0686a27fb4618677e\"\n}\n\n# aws_security_group.zathras_aws_sg:\nresource \"aws_security_group\" \"zathras_aws_sg\" {\n    arn                    = \"arn:aws:ec2:us-east-2:452958939641:security-group/sg-075f7cbbdab50dd8b\"\n    description            = \"Managed by Terraform\"\n    egress                 = [\n        {\n            cidr_blocks      = [\n                \"0.0.0.0/0\",\n            ]\n            description      = \u001b[90mnull\u001b[0m\u001b[0m\n            from_port        = 0\n            ipv6_cidr_blocks = []\n            prefix_list_ids  = []\n            protocol         = \"-1\"\n            security_groups  = []\n            self             = false\n            to_port          = 0\n        },\n    ]\n    id                     = \"sg-075f7cbbdab50dd8b\"\n    ingress                = [\n        {\n            cidr_blocks      = [\n                \"0.0.0.0/0\",\n            ]\n            description      = \u001b[90mnull\u001b[0m\u001b[0m\n            from_port        = 22\n            ipv6_cidr_blocks = []\n            prefix_list_ids  = []\n            protocol         = \"tcp\"\n            security_groups  = []\n            self             = false\n            to_port          = 22\n        },\n    ]\n    name                   = \"zathras_sg\"\n    name_prefix            = \u001b[90mnull\u001b[0m\u001b[0m\n    owner_id               = \"452958939641\"\n    revoke_rules_on_delete = false\n    tags_all               = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    vpc_id                 = \"vpc-0af2aed153bf0de7b\"\n}\n\n# aws_subnet.zathras_prvt_sn:\nresource \"aws_subnet\" \"zathras_prvt_sn\" {\n    arn                                            = \"arn:aws:ec2:us-east-2:452958939641:subnet/subnet-038b748a57c72acd7\"\n    assign_ipv6_address_on_creation                = false\n    availability_zone                              = \"us-east-2a\"\n    availability_zone_id                           = \"use2-az1\"\n    cidr_block                                     = \"10.0.16.0/20\"\n    customer_owned_ipv4_pool                       = \u001b[90mnull\u001b[0m\u001b[0m\n    enable_dns64                                   = false\n    enable_lni_at_device_index                     = 0\n    enable_resource_name_dns_a_record_on_launch    = false\n    enable_resource_name_dns_aaaa_record_on_launch = false\n    id                                             = \"subnet-038b748a57c72acd7\"\n    ipv6_cidr_block                                = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_cidr_block_association_id                 = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_native                                    = false\n    map_customer_owned_ip_on_launch                = false\n    map_public_ip_on_launch                        = false\n    outpost_arn                                    = \u001b[90mnull\u001b[0m\u001b[0m\n    owner_id                                       = \"452958939641\"\n    private_dns_hostname_type_on_launch            = \"ip-name\"\n    tags_all                                       = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    vpc_id                                         = \"vpc-0686a27fb4618677e\"\n}\n\n# aws_subnet.zathras_sn:\nresource \"aws_subnet\" \"zathras_sn\" {\n    arn                                            = \"arn:aws:ec2:us-east-2:452958939641:subnet/subnet-0d42aa087d71e30e4\"\n    assign_ipv6_address_on_creation                = false\n    availability_zone                              = \"us-east-2a\"\n    availability_zone_id                           = \"use2-az1\"\n    cidr_block                                     = \"170.0.16.0/20\"\n    customer_owned_ipv4_pool                       = \u001b[90mnull\u001b[0m\u001b[0m\n    enable_dns64                                   = false\n    enable_lni_at_device_index                     = 0\n    enable_resource_name_dns_a_record_on_launch    = false\n    enable_resource_name_dns_aaaa_record_on_launch = false\n    id                                             = \"subnet-0d42aa087d71e30e4\"\n    ipv6_cidr_block                                = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_cidr_block_association_id                 = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_native                                    = false\n    map_customer_owned_ip_on_launch                = false\n    map_public_ip_on_launch                        = true\n    outpost_arn                                    = \u001b[90mnull\u001b[0m\u001b[0m\n    owner_id                                       = \"452958939641\"\n    private_dns_hostname_type_on_launch            = \"ip-name\"\n    tags_all                                       = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    vpc_id                                         = \"vpc-0af2aed153bf0de7b\"\n}\n\n# aws_vpc.zathras_prvt_vpc:\nresource \"aws_vpc\" \"zathras_prvt_vpc\" {\n    arn                                  = \"arn:aws:ec2:us-east-2:452958939641:vpc/vpc-0686a27fb4618677e\"\n    assign_generated_ipv6_cidr_block     = false\n    cidr_block                           = \"10.0.0.0/16\"\n    default_network_acl_id               = \"acl-08903f4b8fef01aa1\"\n    default_route_table_id               = \"rtb-0abe97f09250a7e86\"\n    default_security_group_id            = \"sg-06fb4c35298d041a6\"\n    dhcp_options_id                      = \"dopt-9ef600f5\"\n    enable_dns_hostnames                 = false\n    enable_dns_support                   = false\n    enable_network_address_usage_metrics = false\n    id                                   = \"vpc-0686a27fb4618677e\"\n    instance_tenancy                     = \"default\"\n    ipv6_association_id                  = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_cidr_block                      = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_cidr_block_network_border_group = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_ipam_pool_id                    = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_netmask_length                  = 0\n    main_route_table_id                  = \"rtb-0abe97f09250a7e86\"\n    owner_id                             = \"452958939641\"\n    tags_all                             = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n}\n\n# aws_vpc.zathras_vpc:\nresource \"aws_vpc\" \"zathras_vpc\" {\n    arn                                  = \"arn:aws:ec2:us-east-2:452958939641:vpc/vpc-0af2aed153bf0de7b\"\n    assign_generated_ipv6_cidr_block     = false\n    cidr_block                           = \"170.0.0.0/16\"\n    default_network_acl_id               = \"acl-03a82b3144ae3ab22\"\n    default_route_table_id               = \"rtb-0861da88efb0eefed\"\n    default_security_group_id            = \"sg-0124b6cb6ce1f97bb\"\n    dhcp_options_id                      = \"dopt-9ef600f5\"\n    enable_dns_hostnames                 = true\n    enable_dns_support                   = true\n    enable_network_address_usage_metrics = false\n    id                                   = \"vpc-0af2aed153bf0de7b\"\n    instance_tenancy                     = \"default\"\n    ipv6_association_id                  = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_cidr_block                      = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_cidr_block_network_border_group = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_ipam_pool_id                    = \u001b[90mnull\u001b[0m\u001b[0m\n    ipv6_netmask_length                  = 0\n    main_route_table_id                  = \"rtb-0861da88efb0eefed\"\n    owner_id                             = \"452958939641\"\n    tags                                 = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n    tags_all                             = {\n        \"Environment\" = \"Test\"\n        \"Jirald\"      = \"dvalin\"\n        \"Manager\"     = \"Managers Name\"\n        \"Owner\"       = \"dvalin\"\n        \"Project\"     = \"Rhel_regression\"\n        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m\n        \"User\"        = \"dvalin\"\n    }\n}\n\n\nOutputs:\n\naws_instance_id0 = \"i-0c41f579d4ea0856b\"\naws_zoneid0 = \"us-east-2a\"\npublic_dns_host0 = \"ec2-52-14-118-191.us-east-2.compute.amazonaws.com\"",
        "stdout_lines": [
            "# aws_default_route_table.zathras_df_rt_tbl:",
            "resource \"aws_default_route_table\" \"zathras_df_rt_tbl\" {",
            "    arn                    = \"arn:aws:ec2:us-east-2:452958939641:route-table/rtb-0861da88efb0eefed\"",
            "    default_route_table_id = \"rtb-0861da88efb0eefed\"",
            "    id                     = \"rtb-0861da88efb0eefed\"",
            "    owner_id               = \"452958939641\"",
            "    route                  = [",
            "        {",
            "            cidr_block                 = \"0.0.0.0/0\"",
            "            core_network_arn           = \u001b[90mnull\u001b[0m\u001b[0m",
            "            destination_prefix_list_id = \u001b[90mnull\u001b[0m\u001b[0m",
            "            egress_only_gateway_id     = \u001b[90mnull\u001b[0m\u001b[0m",
            "            gateway_id                 = \"igw-0084cf1cb64f39162\"",
            "            instance_id                = \u001b[90mnull\u001b[0m\u001b[0m",
            "            ipv6_cidr_block            = \u001b[90mnull\u001b[0m\u001b[0m",
            "            nat_gateway_id             = \u001b[90mnull\u001b[0m\u001b[0m",
            "            network_interface_id       = \u001b[90mnull\u001b[0m\u001b[0m",
            "            transit_gateway_id         = \u001b[90mnull\u001b[0m\u001b[0m",
            "            vpc_endpoint_id            = \u001b[90mnull\u001b[0m\u001b[0m",
            "            vpc_peering_connection_id  = \u001b[90mnull\u001b[0m\u001b[0m",
            "        },",
            "    ]",
            "    tags_all               = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    vpc_id                 = \"vpc-0af2aed153bf0de7b\"",
            "}",
            "",
            "# aws_instance.ec2[\"0\"]:",
            "resource \"aws_instance\" \"ec2\" {",
            "    ami                                  = \"ami-090295859abce72e8\"",
            "    arn                                  = \"arn:aws:ec2:us-east-2:452958939641:instance/i-0c41f579d4ea0856b\"",
            "    associate_public_ip_address          = true",
            "    availability_zone                    = \"us-east-2a\"",
            "    cpu_core_count                       = 2",
            "    cpu_threads_per_core                 = 2",
            "    disable_api_stop                     = false",
            "    disable_api_termination              = false",
            "    ebs_optimized                        = false",
            "    get_password_data                    = false",
            "    hibernation                          = false",
            "    host_id                              = \u001b[90mnull\u001b[0m\u001b[0m",
            "    iam_instance_profile                 = \u001b[90mnull\u001b[0m\u001b[0m",
            "    id                                   = \"i-0c41f579d4ea0856b\"",
            "    instance_initiated_shutdown_behavior = \"stop\"",
            "    instance_lifecycle                   = \u001b[90mnull\u001b[0m\u001b[0m",
            "    instance_state                       = \"running\"",
            "    instance_type                        = \"m5a.xlarge\"",
            "    ipv6_address_count                   = 0",
            "    ipv6_addresses                       = []",
            "    key_name                             = \"DValin\"",
            "    monitoring                           = false",
            "    outpost_arn                          = \u001b[90mnull\u001b[0m\u001b[0m",
            "    password_data                        = \u001b[90mnull\u001b[0m\u001b[0m",
            "    placement_group                      = \u001b[90mnull\u001b[0m\u001b[0m",
            "    placement_partition_number           = 0",
            "    primary_network_interface_id         = \"eni-0e6ff92cafc673c2b\"",
            "    private_dns                          = \"ip-170-0-16-53.us-east-2.compute.internal\"",
            "    private_ip                           = \"170.0.16.53\"",
            "    public_dns                           = \"ec2-52-14-118-191.us-east-2.compute.amazonaws.com\"",
            "    public_ip                            = \"52.14.118.191\"",
            "    secondary_private_ips                = []",
            "    security_groups                      = []",
            "    source_dest_check                    = true",
            "    spot_instance_request_id             = \u001b[90mnull\u001b[0m\u001b[0m",
            "    subnet_id                            = \"subnet-0d42aa087d71e30e4\"",
            "    tags                                 = {",
            "        \"Name\" = \"dvalin_debug-rhel-m5a.xlarge\"",
            "    }",
            "    tags_all                             = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Name\"        = \"dvalin_debug-rhel-m5a.xlarge\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    tenancy                              = \"default\"",
            "    user_data_replace_on_change          = false",
            "    vpc_security_group_ids               = [",
            "        \"sg-075f7cbbdab50dd8b\",",
            "    ]",
            "",
            "    capacity_reservation_specification {",
            "        capacity_reservation_preference = \"open\"",
            "    }",
            "",
            "    cpu_options {",
            "        amd_sev_snp      = \u001b[90mnull\u001b[0m\u001b[0m",
            "        core_count       = 2",
            "        threads_per_core = 2",
            "    }",
            "",
            "    enclave_options {",
            "        enabled = false",
            "    }",
            "",
            "    maintenance_options {",
            "        auto_recovery = \"default\"",
            "    }",
            "",
            "    metadata_options {",
            "        http_endpoint               = \"enabled\"",
            "        http_protocol_ipv6          = \"disabled\"",
            "        http_put_response_hop_limit = 1",
            "        http_tokens                 = \"optional\"",
            "        instance_metadata_tags      = \"disabled\"",
            "    }",
            "",
            "    private_dns_name_options {",
            "        enable_resource_name_dns_a_record    = false",
            "        enable_resource_name_dns_aaaa_record = false",
            "        hostname_type                        = \"ip-name\"",
            "    }",
            "",
            "    root_block_device {",
            "        delete_on_termination = true",
            "        device_name           = \"/dev/sda1\"",
            "        encrypted             = false",
            "        iops                  = 3000",
            "        kms_key_id            = \u001b[90mnull\u001b[0m\u001b[0m",
            "        tags                  = {",
            "            \"Environment\" = \"Test\"",
            "            \"Jirald\"      = \"dvalin\"",
            "            \"Manager\"     = \"Managers Name\"",
            "            \"Owner\"       = \"dvalin\"",
            "            \"Project\"     = \"Rhel_regression\"",
            "            \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "            \"User\"        = \"dvalin\"",
            "        }",
            "        tags_all              = {",
            "            \"Environment\" = \"Test\"",
            "            \"Jirald\"      = \"dvalin\"",
            "            \"Manager\"     = \"Managers Name\"",
            "            \"Owner\"       = \"dvalin\"",
            "            \"Project\"     = \"Rhel_regression\"",
            "            \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "            \"User\"        = \"dvalin\"",
            "        }",
            "        throughput            = 125",
            "        volume_id             = \"vol-09c55963b732000da\"",
            "        volume_size           = 10",
            "        volume_type           = \"gp3\"",
            "    }",
            "}",
            "",
            "# aws_internet_gateway.zathras_gw:",
            "resource \"aws_internet_gateway\" \"zathras_gw\" {",
            "    arn      = \"arn:aws:ec2:us-east-2:452958939641:internet-gateway/igw-0084cf1cb64f39162\"",
            "    id       = \"igw-0084cf1cb64f39162\"",
            "    owner_id = \"452958939641\"",
            "    tags_all = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    vpc_id   = \"vpc-0af2aed153bf0de7b\"",
            "}",
            "",
            "# aws_route_table_association.zathras_aws_rta:",
            "resource \"aws_route_table_association\" \"zathras_aws_rta\" {",
            "    gateway_id     = \u001b[90mnull\u001b[0m\u001b[0m",
            "    id             = \"rtbassoc-02eca3b5babe4c160\"",
            "    route_table_id = \"rtb-0861da88efb0eefed\"",
            "    subnet_id      = \"subnet-0d42aa087d71e30e4\"",
            "}",
            "",
            "# aws_security_group.zathras_aws_prvt_sg:",
            "resource \"aws_security_group\" \"zathras_aws_prvt_sg\" {",
            "    arn                    = \"arn:aws:ec2:us-east-2:452958939641:security-group/sg-0e022a8f304fd345f\"",
            "    description            = \"Managed by Terraform\"",
            "    egress                 = [",
            "        {",
            "            cidr_blocks      = [",
            "                \"0.0.0.0/0\",",
            "            ]",
            "            description      = \u001b[90mnull\u001b[0m\u001b[0m",
            "            from_port        = 0",
            "            ipv6_cidr_blocks = []",
            "            prefix_list_ids  = []",
            "            protocol         = \"-1\"",
            "            security_groups  = []",
            "            self             = false",
            "            to_port          = 0",
            "        },",
            "    ]",
            "    id                     = \"sg-0e022a8f304fd345f\"",
            "    ingress                = [",
            "        {",
            "            cidr_blocks      = [",
            "                \"0.0.0.0/0\",",
            "            ]",
            "            description      = \u001b[90mnull\u001b[0m\u001b[0m",
            "            from_port        = 0",
            "            ipv6_cidr_blocks = []",
            "            prefix_list_ids  = []",
            "            protocol         = \"tcp\"",
            "            security_groups  = []",
            "            self             = false",
            "            to_port          = 65535",
            "        },",
            "    ]",
            "    name                   = \"zathras_sg\"",
            "    name_prefix            = \u001b[90mnull\u001b[0m\u001b[0m",
            "    owner_id               = \"452958939641\"",
            "    revoke_rules_on_delete = false",
            "    tags_all               = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    vpc_id                 = \"vpc-0686a27fb4618677e\"",
            "}",
            "",
            "# aws_security_group.zathras_aws_sg:",
            "resource \"aws_security_group\" \"zathras_aws_sg\" {",
            "    arn                    = \"arn:aws:ec2:us-east-2:452958939641:security-group/sg-075f7cbbdab50dd8b\"",
            "    description            = \"Managed by Terraform\"",
            "    egress                 = [",
            "        {",
            "            cidr_blocks      = [",
            "                \"0.0.0.0/0\",",
            "            ]",
            "            description      = \u001b[90mnull\u001b[0m\u001b[0m",
            "            from_port        = 0",
            "            ipv6_cidr_blocks = []",
            "            prefix_list_ids  = []",
            "            protocol         = \"-1\"",
            "            security_groups  = []",
            "            self             = false",
            "            to_port          = 0",
            "        },",
            "    ]",
            "    id                     = \"sg-075f7cbbdab50dd8b\"",
            "    ingress                = [",
            "        {",
            "            cidr_blocks      = [",
            "                \"0.0.0.0/0\",",
            "            ]",
            "            description      = \u001b[90mnull\u001b[0m\u001b[0m",
            "            from_port        = 22",
            "            ipv6_cidr_blocks = []",
            "            prefix_list_ids  = []",
            "            protocol         = \"tcp\"",
            "            security_groups  = []",
            "            self             = false",
            "            to_port          = 22",
            "        },",
            "    ]",
            "    name                   = \"zathras_sg\"",
            "    name_prefix            = \u001b[90mnull\u001b[0m\u001b[0m",
            "    owner_id               = \"452958939641\"",
            "    revoke_rules_on_delete = false",
            "    tags_all               = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    vpc_id                 = \"vpc-0af2aed153bf0de7b\"",
            "}",
            "",
            "# aws_subnet.zathras_prvt_sn:",
            "resource \"aws_subnet\" \"zathras_prvt_sn\" {",
            "    arn                                            = \"arn:aws:ec2:us-east-2:452958939641:subnet/subnet-038b748a57c72acd7\"",
            "    assign_ipv6_address_on_creation                = false",
            "    availability_zone                              = \"us-east-2a\"",
            "    availability_zone_id                           = \"use2-az1\"",
            "    cidr_block                                     = \"10.0.16.0/20\"",
            "    customer_owned_ipv4_pool                       = \u001b[90mnull\u001b[0m\u001b[0m",
            "    enable_dns64                                   = false",
            "    enable_lni_at_device_index                     = 0",
            "    enable_resource_name_dns_a_record_on_launch    = false",
            "    enable_resource_name_dns_aaaa_record_on_launch = false",
            "    id                                             = \"subnet-038b748a57c72acd7\"",
            "    ipv6_cidr_block                                = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_cidr_block_association_id                 = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_native                                    = false",
            "    map_customer_owned_ip_on_launch                = false",
            "    map_public_ip_on_launch                        = false",
            "    outpost_arn                                    = \u001b[90mnull\u001b[0m\u001b[0m",
            "    owner_id                                       = \"452958939641\"",
            "    private_dns_hostname_type_on_launch            = \"ip-name\"",
            "    tags_all                                       = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    vpc_id                                         = \"vpc-0686a27fb4618677e\"",
            "}",
            "",
            "# aws_subnet.zathras_sn:",
            "resource \"aws_subnet\" \"zathras_sn\" {",
            "    arn                                            = \"arn:aws:ec2:us-east-2:452958939641:subnet/subnet-0d42aa087d71e30e4\"",
            "    assign_ipv6_address_on_creation                = false",
            "    availability_zone                              = \"us-east-2a\"",
            "    availability_zone_id                           = \"use2-az1\"",
            "    cidr_block                                     = \"170.0.16.0/20\"",
            "    customer_owned_ipv4_pool                       = \u001b[90mnull\u001b[0m\u001b[0m",
            "    enable_dns64                                   = false",
            "    enable_lni_at_device_index                     = 0",
            "    enable_resource_name_dns_a_record_on_launch    = false",
            "    enable_resource_name_dns_aaaa_record_on_launch = false",
            "    id                                             = \"subnet-0d42aa087d71e30e4\"",
            "    ipv6_cidr_block                                = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_cidr_block_association_id                 = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_native                                    = false",
            "    map_customer_owned_ip_on_launch                = false",
            "    map_public_ip_on_launch                        = true",
            "    outpost_arn                                    = \u001b[90mnull\u001b[0m\u001b[0m",
            "    owner_id                                       = \"452958939641\"",
            "    private_dns_hostname_type_on_launch            = \"ip-name\"",
            "    tags_all                                       = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    vpc_id                                         = \"vpc-0af2aed153bf0de7b\"",
            "}",
            "",
            "# aws_vpc.zathras_prvt_vpc:",
            "resource \"aws_vpc\" \"zathras_prvt_vpc\" {",
            "    arn                                  = \"arn:aws:ec2:us-east-2:452958939641:vpc/vpc-0686a27fb4618677e\"",
            "    assign_generated_ipv6_cidr_block     = false",
            "    cidr_block                           = \"10.0.0.0/16\"",
            "    default_network_acl_id               = \"acl-08903f4b8fef01aa1\"",
            "    default_route_table_id               = \"rtb-0abe97f09250a7e86\"",
            "    default_security_group_id            = \"sg-06fb4c35298d041a6\"",
            "    dhcp_options_id                      = \"dopt-9ef600f5\"",
            "    enable_dns_hostnames                 = false",
            "    enable_dns_support                   = false",
            "    enable_network_address_usage_metrics = false",
            "    id                                   = \"vpc-0686a27fb4618677e\"",
            "    instance_tenancy                     = \"default\"",
            "    ipv6_association_id                  = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_cidr_block                      = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_cidr_block_network_border_group = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_ipam_pool_id                    = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_netmask_length                  = 0",
            "    main_route_table_id                  = \"rtb-0abe97f09250a7e86\"",
            "    owner_id                             = \"452958939641\"",
            "    tags_all                             = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "}",
            "",
            "# aws_vpc.zathras_vpc:",
            "resource \"aws_vpc\" \"zathras_vpc\" {",
            "    arn                                  = \"arn:aws:ec2:us-east-2:452958939641:vpc/vpc-0af2aed153bf0de7b\"",
            "    assign_generated_ipv6_cidr_block     = false",
            "    cidr_block                           = \"170.0.0.0/16\"",
            "    default_network_acl_id               = \"acl-03a82b3144ae3ab22\"",
            "    default_route_table_id               = \"rtb-0861da88efb0eefed\"",
            "    default_security_group_id            = \"sg-0124b6cb6ce1f97bb\"",
            "    dhcp_options_id                      = \"dopt-9ef600f5\"",
            "    enable_dns_hostnames                 = true",
            "    enable_dns_support                   = true",
            "    enable_network_address_usage_metrics = false",
            "    id                                   = \"vpc-0af2aed153bf0de7b\"",
            "    instance_tenancy                     = \"default\"",
            "    ipv6_association_id                  = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_cidr_block                      = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_cidr_block_network_border_group = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_ipam_pool_id                    = \u001b[90mnull\u001b[0m\u001b[0m",
            "    ipv6_netmask_length                  = 0",
            "    main_route_table_id                  = \"rtb-0861da88efb0eefed\"",
            "    owner_id                             = \"452958939641\"",
            "    tags                                 = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "    tags_all                             = {",
            "        \"Environment\" = \"Test\"",
            "        \"Jirald\"      = \"dvalin\"",
            "        \"Manager\"     = \"Managers Name\"",
            "        \"Owner\"       = \"dvalin\"",
            "        \"Project\"     = \"Rhel_regression\"",
            "        \"TicketID\"    = \u001b[90mnull\u001b[0m\u001b[0m",
            "        \"User\"        = \"dvalin\"",
            "    }",
            "}",
            "",
            "",
            "Outputs:",
            "",
            "aws_instance_id0 = \"i-0c41f579d4ea0856b\"",
            "aws_zoneid0 = \"us-east-2a\"",
            "public_dns_host0 = \"ec2-52-14-118-191.us-east-2.compute.amazonaws.com\""
        ]
    }
}
2025-01-30 08:20:40,392 p=1511788 u=dvalin n=ansible | TASK [aws_create : obtain AWS vars] *******************************************************************************************************************
2025-01-30 08:20:40,409 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:20:40,414 p=1511788 u=dvalin n=ansible | TASK [aws_create : Record aws data] *******************************************************************************************************************
2025-01-30 08:20:40,433 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_record_info.yml for localhost
2025-01-30 08:20:40,447 p=1511788 u=dvalin n=ansible | TASK [aws_create : AWS info file header] **************************************************************************************************************
2025-01-30 08:20:40,810 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:40,814 p=1511788 u=dvalin n=ansible | TASK [aws_create : AWS non-spot terraform file, no network] *******************************************************************************************
2025-01-30 08:20:41,190 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:41,195 p=1511788 u=dvalin n=ansible | TASK [aws_create : AWS non-spot terraform file, network] **********************************************************************************************
2025-01-30 08:20:41,210 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,214 p=1511788 u=dvalin n=ansible | TASK [aws_create : AWS spot terraform file, no network] ***********************************************************************************************
2025-01-30 08:20:41,227 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,232 p=1511788 u=dvalin n=ansible | TASK [aws_create : Record the zone id for spot system] ************************************************************************************************
2025-01-30 08:20:41,244 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,249 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add network lines] *****************************************************************************************************************
2025-01-30 08:20:41,262 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,266 p=1511788 u=dvalin n=ansible | TASK [aws_create : Record zone for spot network] ******************************************************************************************************
2025-01-30 08:20:41,279 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,283 p=1511788 u=dvalin n=ansible | TASK [aws_create : Get tags] **************************************************************************************************************************
2025-01-30 08:20:41,296 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,300 p=1511788 u=dvalin n=ansible | TASK [aws_create : set the tags] **********************************************************************************************************************
2025-01-30 08:20:41,313 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,317 p=1511788 u=dvalin n=ansible | TASK [aws_create : set the tags] **********************************************************************************************************************
2025-01-30 08:20:41,330 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:41,334 p=1511788 u=dvalin n=ansible | TASK [aws_create : report aws data values] ************************************************************************************************************
2025-01-30 08:20:41,366 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "msg": {
        "check_results": null,
        "lineage": "84b490e6-b01c-3187-6f75-70081602674e",
        "outputs": {
            "aws_instance_id0": {
                "type": "string",
                "value": "i-0c41f579d4ea0856b"
            },
            "aws_zoneid0": {
                "type": "string",
                "value": "us-east-2a"
            },
            "public_dns_host0": {
                "type": "string",
                "value": "ec2-52-14-118-191.us-east-2.compute.amazonaws.com"
            }
        },
        "resources": [
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:route-table/rtb-0861da88efb0eefed",
                            "default_route_table_id": "rtb-0861da88efb0eefed",
                            "id": "rtb-0861da88efb0eefed",
                            "owner_id": "452958939641",
                            "propagating_vgws": null,
                            "route": [
                                {
                                    "cidr_block": "0.0.0.0/0",
                                    "core_network_arn": "",
                                    "destination_prefix_list_id": "",
                                    "egress_only_gateway_id": "",
                                    "gateway_id": "igw-0084cf1cb64f39162",
                                    "instance_id": "",
                                    "ipv6_cidr_block": "",
                                    "nat_gateway_id": "",
                                    "network_interface_id": "",
                                    "transit_gateway_id": "",
                                    "vpc_endpoint_id": "",
                                    "vpc_peering_connection_id": ""
                                }
                            ],
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "timeouts": null,
                            "vpc_id": "vpc-0af2aed153bf0de7b"
                        },
                        "dependencies": [
                            "aws_internet_gateway.zathras_gw",
                            "aws_vpc.zathras_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwfX0=",
                        "schema_version": 0,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_df_rt_tbl",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_default_route_table"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "ami": "ami-090295859abce72e8",
                            "arn": "arn:aws:ec2:us-east-2:452958939641:instance/i-0c41f579d4ea0856b",
                            "associate_public_ip_address": true,
                            "availability_zone": "us-east-2a",
                            "capacity_reservation_specification": [
                                {
                                    "capacity_reservation_preference": "open",
                                    "capacity_reservation_target": []
                                }
                            ],
                            "cpu_core_count": 2,
                            "cpu_options": [
                                {
                                    "amd_sev_snp": "",
                                    "core_count": 2,
                                    "threads_per_core": 2
                                }
                            ],
                            "cpu_threads_per_core": 2,
                            "credit_specification": [],
                            "disable_api_stop": false,
                            "disable_api_termination": false,
                            "ebs_block_device": [],
                            "ebs_optimized": false,
                            "enable_primary_ipv6": null,
                            "enclave_options": [
                                {
                                    "enabled": false
                                }
                            ],
                            "ephemeral_block_device": [],
                            "get_password_data": false,
                            "hibernation": false,
                            "host_id": "",
                            "host_resource_group_arn": null,
                            "iam_instance_profile": "",
                            "id": "i-0c41f579d4ea0856b",
                            "instance_initiated_shutdown_behavior": "stop",
                            "instance_lifecycle": "",
                            "instance_market_options": [],
                            "instance_state": "running",
                            "instance_type": "m5a.xlarge",
                            "ipv6_address_count": 0,
                            "ipv6_addresses": [],
                            "key_name": "DValin",
                            "launch_template": [],
                            "maintenance_options": [
                                {
                                    "auto_recovery": "default"
                                }
                            ],
                            "metadata_options": [
                                {
                                    "http_endpoint": "enabled",
                                    "http_protocol_ipv6": "disabled",
                                    "http_put_response_hop_limit": 1,
                                    "http_tokens": "optional",
                                    "instance_metadata_tags": "disabled"
                                }
                            ],
                            "monitoring": false,
                            "network_interface": [],
                            "outpost_arn": "",
                            "password_data": "",
                            "placement_group": "",
                            "placement_partition_number": 0,
                            "primary_network_interface_id": "eni-0e6ff92cafc673c2b",
                            "private_dns": "ip-170-0-16-53.us-east-2.compute.internal",
                            "private_dns_name_options": [
                                {
                                    "enable_resource_name_dns_a_record": false,
                                    "enable_resource_name_dns_aaaa_record": false,
                                    "hostname_type": "ip-name"
                                }
                            ],
                            "private_ip": "170.0.16.53",
                            "public_dns": "ec2-52-14-118-191.us-east-2.compute.amazonaws.com",
                            "public_ip": "52.14.118.191",
                            "root_block_device": [
                                {
                                    "delete_on_termination": true,
                                    "device_name": "/dev/sda1",
                                    "encrypted": false,
                                    "iops": 3000,
                                    "kms_key_id": "",
                                    "tags": {
                                        "Environment": "Test",
                                        "Jirald": "dvalin",
                                        "Manager": "Managers Name",
                                        "Owner": "dvalin",
                                        "Project": "Rhel_regression",
                                        "TicketID": "",
                                        "User": "dvalin"
                                    },
                                    "tags_all": {
                                        "Environment": "Test",
                                        "Jirald": "dvalin",
                                        "Manager": "Managers Name",
                                        "Owner": "dvalin",
                                        "Project": "Rhel_regression",
                                        "TicketID": "",
                                        "User": "dvalin"
                                    },
                                    "throughput": 125,
                                    "volume_id": "vol-09c55963b732000da",
                                    "volume_size": 10,
                                    "volume_type": "gp3"
                                }
                            ],
                            "secondary_private_ips": [],
                            "security_groups": [],
                            "source_dest_check": true,
                            "spot_instance_request_id": "",
                            "subnet_id": "subnet-0d42aa087d71e30e4",
                            "tags": {
                                "Name": "dvalin_debug-rhel-m5a.xlarge"
                            },
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Name": "dvalin_debug-rhel-m5a.xlarge",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "tenancy": "default",
                            "timeouts": null,
                            "user_data": null,
                            "user_data_base64": null,
                            "user_data_replace_on_change": false,
                            "volume_tags": null,
                            "vpc_security_group_ids": [
                                "sg-075f7cbbdab50dd8b"
                            ]
                        },
                        "dependencies": [
                            "aws_internet_gateway.zathras_gw",
                            "aws_security_group.zathras_aws_sg",
                            "aws_subnet.zathras_sn",
                            "aws_vpc.zathras_vpc"
                        ],
                        "index_key": "0",
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "ec2",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_instance"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:internet-gateway/igw-0084cf1cb64f39162",
                            "id": "igw-0084cf1cb64f39162",
                            "owner_id": "452958939641",
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "timeouts": null,
                            "vpc_id": "vpc-0af2aed153bf0de7b"
                        },
                        "dependencies": [
                            "aws_vpc.zathras_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
                        "schema_version": 0,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_gw",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_internet_gateway"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "gateway_id": "",
                            "id": "rtbassoc-02eca3b5babe4c160",
                            "route_table_id": "rtb-0861da88efb0eefed",
                            "subnet_id": "subnet-0d42aa087d71e30e4",
                            "timeouts": null
                        },
                        "dependencies": [
                            "aws_default_route_table.zathras_df_rt_tbl",
                            "aws_internet_gateway.zathras_gw",
                            "aws_subnet.zathras_sn",
                            "aws_vpc.zathras_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
                        "schema_version": 0,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_aws_rta",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_route_table_association"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:security-group/sg-0e022a8f304fd345f",
                            "description": "Managed by Terraform",
                            "egress": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": "",
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": [],
                                    "prefix_list_ids": [],
                                    "protocol": "-1",
                                    "security_groups": [],
                                    "self": false,
                                    "to_port": 0
                                }
                            ],
                            "id": "sg-0e022a8f304fd345f",
                            "ingress": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": "",
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": [],
                                    "prefix_list_ids": [],
                                    "protocol": "tcp",
                                    "security_groups": [],
                                    "self": false,
                                    "to_port": 65535
                                }
                            ],
                            "name": "zathras_sg",
                            "name_prefix": "",
                            "owner_id": "452958939641",
                            "revoke_rules_on_delete": false,
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "timeouts": null,
                            "vpc_id": "vpc-0686a27fb4618677e"
                        },
                        "dependencies": [
                            "aws_vpc.zathras_prvt_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_aws_prvt_sg",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_security_group"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:security-group/sg-075f7cbbdab50dd8b",
                            "description": "Managed by Terraform",
                            "egress": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": "",
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": [],
                                    "prefix_list_ids": [],
                                    "protocol": "-1",
                                    "security_groups": [],
                                    "self": false,
                                    "to_port": 0
                                }
                            ],
                            "id": "sg-075f7cbbdab50dd8b",
                            "ingress": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": "",
                                    "from_port": 22,
                                    "ipv6_cidr_blocks": [],
                                    "prefix_list_ids": [],
                                    "protocol": "tcp",
                                    "security_groups": [],
                                    "self": false,
                                    "to_port": 22
                                }
                            ],
                            "name": "zathras_sg",
                            "name_prefix": "",
                            "owner_id": "452958939641",
                            "revoke_rules_on_delete": false,
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "timeouts": null,
                            "vpc_id": "vpc-0af2aed153bf0de7b"
                        },
                        "dependencies": [
                            "aws_vpc.zathras_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_aws_sg",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_security_group"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:subnet/subnet-038b748a57c72acd7",
                            "assign_ipv6_address_on_creation": false,
                            "availability_zone": "us-east-2a",
                            "availability_zone_id": "use2-az1",
                            "cidr_block": "10.0.16.0/20",
                            "customer_owned_ipv4_pool": "",
                            "enable_dns64": false,
                            "enable_lni_at_device_index": 0,
                            "enable_resource_name_dns_a_record_on_launch": false,
                            "enable_resource_name_dns_aaaa_record_on_launch": false,
                            "id": "subnet-038b748a57c72acd7",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "ipv6_native": false,
                            "map_customer_owned_ip_on_launch": false,
                            "map_public_ip_on_launch": false,
                            "outpost_arn": "",
                            "owner_id": "452958939641",
                            "private_dns_hostname_type_on_launch": "ip-name",
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "timeouts": null,
                            "vpc_id": "vpc-0686a27fb4618677e"
                        },
                        "dependencies": [
                            "aws_vpc.zathras_prvt_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_prvt_sn",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_subnet"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:subnet/subnet-0d42aa087d71e30e4",
                            "assign_ipv6_address_on_creation": false,
                            "availability_zone": "us-east-2a",
                            "availability_zone_id": "use2-az1",
                            "cidr_block": "170.0.16.0/20",
                            "customer_owned_ipv4_pool": "",
                            "enable_dns64": false,
                            "enable_lni_at_device_index": 0,
                            "enable_resource_name_dns_a_record_on_launch": false,
                            "enable_resource_name_dns_aaaa_record_on_launch": false,
                            "id": "subnet-0d42aa087d71e30e4",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "ipv6_native": false,
                            "map_customer_owned_ip_on_launch": false,
                            "map_public_ip_on_launch": true,
                            "outpost_arn": "",
                            "owner_id": "452958939641",
                            "private_dns_hostname_type_on_launch": "ip-name",
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "timeouts": null,
                            "vpc_id": "vpc-0af2aed153bf0de7b"
                        },
                        "dependencies": [
                            "aws_vpc.zathras_vpc"
                        ],
                        "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_sn",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_subnet"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:vpc/vpc-0686a27fb4618677e",
                            "assign_generated_ipv6_cidr_block": false,
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-08903f4b8fef01aa1",
                            "default_route_table_id": "rtb-0abe97f09250a7e86",
                            "default_security_group_id": "sg-06fb4c35298d041a6",
                            "dhcp_options_id": "dopt-9ef600f5",
                            "enable_dns_hostnames": false,
                            "enable_dns_support": false,
                            "enable_network_address_usage_metrics": false,
                            "id": "vpc-0686a27fb4618677e",
                            "instance_tenancy": "default",
                            "ipv4_ipam_pool_id": null,
                            "ipv4_netmask_length": null,
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_network_border_group": "",
                            "ipv6_ipam_pool_id": "",
                            "ipv6_netmask_length": 0,
                            "main_route_table_id": "rtb-0abe97f09250a7e86",
                            "owner_id": "452958939641",
                            "tags": null,
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            }
                        },
                        "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_prvt_vpc",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_vpc"
            },
            {
                "instances": [
                    {
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:452958939641:vpc/vpc-0af2aed153bf0de7b",
                            "assign_generated_ipv6_cidr_block": false,
                            "cidr_block": "170.0.0.0/16",
                            "default_network_acl_id": "acl-03a82b3144ae3ab22",
                            "default_route_table_id": "rtb-0861da88efb0eefed",
                            "default_security_group_id": "sg-0124b6cb6ce1f97bb",
                            "dhcp_options_id": "dopt-9ef600f5",
                            "enable_dns_hostnames": true,
                            "enable_dns_support": true,
                            "enable_network_address_usage_metrics": false,
                            "id": "vpc-0af2aed153bf0de7b",
                            "instance_tenancy": "default",
                            "ipv4_ipam_pool_id": null,
                            "ipv4_netmask_length": null,
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_network_border_group": "",
                            "ipv6_ipam_pool_id": "",
                            "ipv6_netmask_length": 0,
                            "main_route_table_id": "rtb-0861da88efb0eefed",
                            "owner_id": "452958939641",
                            "tags": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            },
                            "tags_all": {
                                "Environment": "Test",
                                "Jirald": "dvalin",
                                "Manager": "Managers Name",
                                "Owner": "dvalin",
                                "Project": "Rhel_regression",
                                "TicketID": "",
                                "User": "dvalin"
                            }
                        },
                        "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
                        "schema_version": 1,
                        "sensitive_attributes": []
                    }
                ],
                "mode": "managed",
                "name": "zathras_vpc",
                "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].zathras_prov",
                "type": "aws_vpc"
            }
        ],
        "serial": 11,
        "terraform_version": "1.10.1",
        "version": 4
    }
}
2025-01-30 08:20:41,371 p=1511788 u=dvalin n=ansible | TASK [aws_create : read in aws tf values] *************************************************************************************************************
2025-01-30 08:20:41,386 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:20:41,390 p=1511788 u=dvalin n=ansible | TASK [AWS wait for ssh to come up] ********************************************************************************************************************
2025-01-30 08:20:41,428 p=1511788 u=dvalin n=ansible | TASK [wait_for_ssh : wait for ssh to come up] *********************************************************************************************************
2025-01-30 08:20:51,807 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:20:51,816 p=1511788 u=dvalin n=ansible | TASK [aws_create : AWS bail if no public dns] *********************************************************************************************************
2025-01-30 08:20:51,830 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:51,835 p=1511788 u=dvalin n=ansible | TASK [Verfiy AWS CPU] *********************************************************************************************************************************
2025-01-30 08:20:51,848 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:51,852 p=1511788 u=dvalin n=ansible | TASK [aws_create : Remove wrong cpu type systems] *****************************************************************************************************
2025-01-30 08:20:51,865 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:51,870 p=1511788 u=dvalin n=ansible | TASK [AWS wait for ssh to come up] ********************************************************************************************************************
2025-01-30 08:20:51,883 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:51,887 p=1511788 u=dvalin n=ansible | TASK [aws_create : AWS bail if no public dns] *********************************************************************************************************
2025-01-30 08:20:51,900 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:51,904 p=1511788 u=dvalin n=ansible | TASK [aws_create : record hostname] *******************************************************************************************************************
2025-01-30 08:20:52,102 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:52,107 p=1511788 u=dvalin n=ansible | TASK [aws_create : Add to run vars group] *************************************************************************************************************
2025-01-30 08:20:52,302 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:20:52,307 p=1511788 u=dvalin n=ansible | TASK [aws_create : save dns0 information] *************************************************************************************************************
2025-01-30 08:20:52,324 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_save_dns_info.yml for localhost
2025-01-30 08:20:52,332 p=1511788 u=dvalin n=ansible | TASK [now add it to the install_group file] ***********************************************************************************************************
2025-01-30 08:20:52,367 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : Check for the file, does it exist] ******************************************************************************************
2025-01-30 08:20:52,557 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:20:52,562 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : Add first line] *************************************************************************************************************
2025-01-30 08:20:52,760 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:52,764 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : Add the second line] ********************************************************************************************************
2025-01-30 08:20:52,962 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:52,966 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : add the line to the host group file] ****************************************************************************************
2025-01-30 08:20:53,164 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:53,172 p=1511788 u=dvalin n=ansible | TASK [aws_create : add to install_group] **************************************************************************************************************
2025-01-30 08:20:53,190 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:53,194 p=1511788 u=dvalin n=ansible | TASK [aws_create : record instance id] ****************************************************************************************************************
2025-01-30 08:20:53,391 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:53,395 p=1511788 u=dvalin n=ansible | TASK [aws_create : record network instance id] ********************************************************************************************************
2025-01-30 08:20:53,408 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:53,413 p=1511788 u=dvalin n=ansible | TASK [aws_create : record network hostname] ***********************************************************************************************************
2025-01-30 08:20:53,426 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:53,430 p=1511788 u=dvalin n=ansible | TASK [aws_create : record network instance id] ********************************************************************************************************
2025-01-30 08:20:53,443 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:53,447 p=1511788 u=dvalin n=ansible | TASK [aws_create : save network dns information] ******************************************************************************************************
2025-01-30 08:20:53,460 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:53,465 p=1511788 u=dvalin n=ansible | TASK [aws_create : no net host] ***********************************************************************************************************************
2025-01-30 08:20:53,661 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:53,666 p=1511788 u=dvalin n=ansible | TASK [aws_create : no net id] *************************************************************************************************************************
2025-01-30 08:20:53,862 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:20:53,867 p=1511788 u=dvalin n=ansible | TASK [aws_post_pbench] ********************************************************************************************************************************
2025-01-30 08:20:53,880 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:53,885 p=1511788 u=dvalin n=ansible | TASK [aws_post_pbench network] ************************************************************************************************************************
2025-01-30 08:20:53,898 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:20:53,905 p=1511788 u=dvalin n=ansible | TASK [aws_create : Make sure python3 is installed] ****************************************************************************************************
2025-01-30 08:21:26,506 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:26,513 p=1511788 u=dvalin n=ansible | TASK [aws_create : Make sure python3 is installed] ****************************************************************************************************
2025-01-30 08:21:26,531 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:26,539 p=1511788 u=dvalin n=ansible | TASK [aws_create : Make sure python3 is installed] ****************************************************************************************************
2025-01-30 08:21:26,555 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:26,562 p=1511788 u=dvalin n=ansible | TASK [aws_create : Make sure python3 is installed] ****************************************************************************************************
2025-01-30 08:21:26,575 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:26,579 p=1511788 u=dvalin n=ansible | TASK [aws_create : create end time] *******************************************************************************************************************
2025-01-30 08:21:26,772 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:26,776 p=1511788 u=dvalin n=ansible | TASK [aws_create : Report creation time] **************************************************************************************************************
2025-01-30 08:21:26,986 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:26,990 p=1511788 u=dvalin n=ansible | TASK [aws_create : Save aws vpc] **********************************************************************************************************************
2025-01-30 08:21:27,009 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_vpc.yml for localhost
2025-01-30 08:21:27,047 p=1511788 u=dvalin n=ansible | TASK [aws_create : retrieve public vpc from terraform] ************************************************************************************************
2025-01-30 08:21:27,242 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:27,246 p=1511788 u=dvalin n=ansible | TASK [aws_create : record vpc group] ******************************************************************************************************************
2025-01-30 08:21:27,444 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:27,448 p=1511788 u=dvalin n=ansible | TASK [aws_create : retrieve prvt vpc from terraform] **************************************************************************************************
2025-01-30 08:21:27,642 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:27,646 p=1511788 u=dvalin n=ansible | TASK [aws_create : record prvt vpc group] *************************************************************************************************************
2025-01-30 08:21:27,841 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:27,846 p=1511788 u=dvalin n=ansible | TASK [aws_create : Save aws placement zone] ***********************************************************************************************************
2025-01-30 08:21:27,864 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_place_zone.yml for localhost
2025-01-30 08:21:27,903 p=1511788 u=dvalin n=ansible | TASK [aws_create : include vars for vpc gathering] ****************************************************************************************************
2025-01-30 08:21:27,918 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:27,923 p=1511788 u=dvalin n=ansible | TASK [aws_create : get the general information for the instance] **************************************************************************************
2025-01-30 08:21:28,933 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:28,938 p=1511788 u=dvalin n=ansible | TASK [aws_create : record the zone information] *******************************************************************************************************
2025-01-30 08:21:29,138 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:29,142 p=1511788 u=dvalin n=ansible | TASK [aws_create : Save aws security group] ***********************************************************************************************************
2025-01-30 08:21:29,161 p=1511788 u=dvalin n=ansible | included: /home/dvalin/fix_error_handling/ansible_roles/roles/aws_create/tasks/aws_sec_grp.yml for localhost
2025-01-30 08:21:29,201 p=1511788 u=dvalin n=ansible | TASK [aws_create : retrieve security group from terraform] ********************************************************************************************
2025-01-30 08:21:29,397 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:29,401 p=1511788 u=dvalin n=ansible | TASK [aws_create : record security group] *************************************************************************************************************
2025-01-30 08:21:29,597 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:29,602 p=1511788 u=dvalin n=ansible | TASK [aws_create : retrieve security group from terraform] ********************************************************************************************
2025-01-30 08:21:29,797 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:29,801 p=1511788 u=dvalin n=ansible | TASK [aws_create : record prvt security group] ********************************************************************************************************
2025-01-30 08:21:29,998 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:30,002 p=1511788 u=dvalin n=ansible | TASK [aws_create : include net dynamic info] **********************************************************************************************************
2025-01-30 08:21:30,017 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:30,021 p=1511788 u=dvalin n=ansible | TASK [aws_create : set_test_host] *********************************************************************************************************************
2025-01-30 08:21:30,038 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:30,042 p=1511788 u=dvalin n=ansible | TASK [now add it to the test_group file] **************************************************************************************************************
2025-01-30 08:21:30,147 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : Check for the file, does it exist] ******************************************************************************************
2025-01-30 08:21:30,337 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:30,341 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : Add first line] *************************************************************************************************************
2025-01-30 08:21:30,544 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:30,548 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : Add the second line] ********************************************************************************************************
2025-01-30 08:21:30,746 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:30,750 p=1511788 u=dvalin n=ansible | TASK [add_to_host_group : add the line to the host group file] ****************************************************************************************
2025-01-30 08:21:30,946 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:30,954 p=1511788 u=dvalin n=ansible | TASK [aws_create : set up for auto login to system] ***************************************************************************************************
2025-01-30 08:21:32,795 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:32,800 p=1511788 u=dvalin n=ansible | TASK [aws_create : reload net dynamic info] ***********************************************************************************************************
2025-01-30 08:21:32,815 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:32,819 p=1511788 u=dvalin n=ansible | TASK [aws_create : get the volumes to terminate] ******************************************************************************************************
2025-01-30 08:21:33,802 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:33,806 p=1511788 u=dvalin n=ansible | TASK [aws_create : Set volume termination command] ****************************************************************************************************
2025-01-30 08:21:33,822 p=1511788 u=dvalin n=ansible | ok: [localhost] => {
    "msg": "/home/dvalin/fix_error_handling/debug/rhel/aws/m5a.xlarge_0/aws_set_term_flags i-0c41f579d4ea0856b \"[]\""
}
2025-01-30 08:21:33,826 p=1511788 u=dvalin n=ansible | TASK [aws_create : Set volume termination flag] *******************************************************************************************************
2025-01-30 08:21:34,024 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:34,028 p=1511788 u=dvalin n=ansible | TASK [aws_create : read in aws tf values] *************************************************************************************************************
2025-01-30 08:21:34,044 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:34,048 p=1511788 u=dvalin n=ansible | TASK [aws_create : ec2_instance_info] *****************************************************************************************************************
2025-01-30 08:21:34,880 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:34,887 p=1511788 u=dvalin n=ansible | TASK [aws_create : copy] ******************************************************************************************************************************
2025-01-30 08:21:35,261 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:35,265 p=1511788 u=dvalin n=ansible | TASK [aws_create : handle setting up network] *********************************************************************************************************
2025-01-30 08:21:35,279 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:35,286 p=1511788 u=dvalin n=ansible | TASK [azure_operations] *******************************************************************************************************************************
2025-01-30 08:21:35,298 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:35,302 p=1511788 u=dvalin n=ansible | TASK [include_role : gcp_create_instance] *************************************************************************************************************
2025-01-30 08:21:35,313 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:35,317 p=1511788 u=dvalin n=ansible | TASK [local_operations] *******************************************************************************************************************************
2025-01-30 08:21:35,328 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:35,368 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:21:35,379 p=1511788 u=dvalin n=ansible | TASK [pull meta data] *********************************************************************************************************************************
2025-01-30 08:21:35,404 p=1511788 u=dvalin n=ansible | TASK [retrieve_meta_data : Grab the metada] ***********************************************************************************************************
2025-01-30 08:21:35,414 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:35,419 p=1511788 u=dvalin n=ansible | TASK [retrieve_meta_data : retrieve the azure metadata] ***********************************************************************************************
2025-01-30 08:21:35,429 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:35,433 p=1511788 u=dvalin n=ansible | TASK [retrieve_meta_data : Install jq] ****************************************************************************************************************
2025-01-30 08:21:35,443 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:35,447 p=1511788 u=dvalin n=ansible | TASK [retrieve_meta_data : Grab the metadata] *********************************************************************************************************
2025-01-30 08:21:35,456 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:35,461 p=1511788 u=dvalin n=ansible | TASK [retrieve_meta_data : retrieve the gcp metadata] *************************************************************************************************
2025-01-30 08:21:35,470 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:35,492 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:21:35,502 p=1511788 u=dvalin n=ansible | TASK [set_fact] ***************************************************************************************************************************************
2025-01-30 08:21:35,510 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:35,514 p=1511788 u=dvalin n=ansible | TASK [update_os_image] ********************************************************************************************************************************
2025-01-30 08:21:35,540 p=1511788 u=dvalin n=ansible | TASK [update_os_image : include dynamic info] *********************************************************************************************************
2025-01-30 08:21:35,551 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:21:35,555 p=1511788 u=dvalin n=ansible | TASK [update_os_image : Record default status of update success] **************************************************************************************
2025-01-30 08:21:35,751 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:35,756 p=1511788 u=dvalin n=ansible | TASK [perform single test system update] **************************************************************************************************************
2025-01-30 08:21:35,767 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:35,771 p=1511788 u=dvalin n=ansible | TASK [perform networked test system update] ***********************************************************************************************************
2025-01-30 08:21:35,782 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:35,790 p=1511788 u=dvalin n=ansible | TASK [Terminate on update_failure failure] ************************************************************************************************************
2025-01-30 08:21:35,819 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:21:36,011 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:36,015 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:21:36,026 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:36,030 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:21:36,040 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:36,044 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:21:36,054 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:36,071 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:21:36,075 p=1511788 u=dvalin n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2025-01-30 08:21:39,051 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:39,066 p=1511788 u=dvalin n=ansible | TASK [figure out home dir] ****************************************************************************************************************************
2025-01-30 08:21:39,078 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:39,101 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:21:39,108 p=1511788 u=dvalin n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2025-01-30 08:21:40,794 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:40,812 p=1511788 u=dvalin n=ansible | TASK [upload meta data for various usage.] ************************************************************************************************************
2025-01-30 08:21:40,841 p=1511788 u=dvalin n=ansible | TASK [upload_meta_data : Copy metadata to test system for later use] **********************************************************************************
2025-01-30 08:21:40,852 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:40,859 p=1511788 u=dvalin n=ansible | TASK [upload_meta_data : single system meta data] *****************************************************************************************************
2025-01-30 08:21:43,184 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:43,191 p=1511788 u=dvalin n=ansible | TASK [upload_meta_data : second system meta data] *****************************************************************************************************
2025-01-30 08:21:43,203 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:43,237 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:21:43,255 p=1511788 u=dvalin n=ansible | TASK [install tools] **********************************************************************************************************************************
2025-01-30 08:21:43,281 p=1511788 u=dvalin n=ansible | TASK [copy up the various tar balls] ******************************************************************************************************************
2025-01-30 08:21:43,331 p=1511788 u=dvalin n=ansible | TASK [unarchive : copy up the tar ball] ***************************************************************************************************************
2025-01-30 08:21:45,933 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:45,939 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:21:45,970 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:21:47,038 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:47,045 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:21:47,056 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:47,075 p=1511788 u=dvalin n=ansible | TASK [unarchive : copy up the tar ball] ***************************************************************************************************************
2025-01-30 08:21:49,511 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:49,518 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:21:49,546 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:21:50,611 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:50,618 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:21:50,629 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:50,648 p=1511788 u=dvalin n=ansible | TASK [unarchive : copy up the tar ball] ***************************************************************************************************************
2025-01-30 08:21:53,065 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:53,072 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:21:53,102 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:21:54,170 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:54,178 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:21:54,190 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:54,215 p=1511788 u=dvalin n=ansible | TASK [retrieve install tools status] ******************************************************************************************************************
2025-01-30 08:21:54,243 p=1511788 u=dvalin n=ansible | TASK [retrieve_status : retrieve package status] ******************************************************************************************************
2025-01-30 08:21:55,711 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:55,744 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:21:55,754 p=1511788 u=dvalin n=ansible | TASK [Terminate on repo failure] **********************************************************************************************************************
2025-01-30 08:21:55,780 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:21:55,972 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:21:55,976 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:21:55,988 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:55,993 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:21:56,004 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:56,008 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:21:56,018 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:21:56,038 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:21:56,057 p=1511788 u=dvalin n=ansible | TASK [Enable CodeReady Builder for Azure] *************************************************************************************************************
2025-01-30 08:21:56,068 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:56,075 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:21:56,086 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:56,093 p=1511788 u=dvalin n=ansible | TASK [get codeready repo name] ************************************************************************************************************************
2025-01-30 08:21:57,674 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:57,680 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:21:57,714 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:21:58,867 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:58,873 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:21:58,888 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:21:58,900 p=1511788 u=dvalin n=ansible | TASK [aws upload the codeready repo] ******************************************************************************************************************
2025-01-30 08:22:00,474 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:00,481 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:22:00,517 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:22:01,666 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:01,672 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:22:01,686 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:01,699 p=1511788 u=dvalin n=ansible | TASK [Install yum utils] ******************************************************************************************************************************
2025-01-30 08:22:01,710 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:01,717 p=1511788 u=dvalin n=ansible | TASK [Enable CodeReady Builder for GCP] ***************************************************************************************************************
2025-01-30 08:22:01,727 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:01,734 p=1511788 u=dvalin n=ansible | TASK [Record status of yum config sucess] *************************************************************************************************************
2025-01-30 08:22:01,745 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:01,752 p=1511788 u=dvalin n=ansible | TASK [retrieve repo config status] ********************************************************************************************************************
2025-01-30 08:22:01,787 p=1511788 u=dvalin n=ansible | TASK [retrieve_status : retrieve package status] ******************************************************************************************************
2025-01-30 08:22:03,006 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:03,039 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:22:03,050 p=1511788 u=dvalin n=ansible | TASK [Terminate on repo failure] **********************************************************************************************************************
2025-01-30 08:22:03,081 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:22:03,271 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:22:03,276 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:22:03,286 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:22:03,290 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:22:03,300 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:22:03,304 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:22:03,314 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:22:03,335 p=1511788 u=dvalin n=ansible | PLAY [localhost] **************************************************************************************************************************************
2025-01-30 08:22:03,345 p=1511788 u=dvalin n=ansible | TASK [Determine disk space] ***************************************************************************************************************************
2025-01-30 08:22:03,371 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : include dynamic info] *******************************************************************************************************
2025-01-30 08:22:03,382 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:22:03,386 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : Get the free space] *********************************************************************************************************
2025-01-30 08:22:04,652 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:22:04,657 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : Write upload dir to  ansible_run_vars.yml] **********************************************************************************
2025-01-30 08:22:04,854 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:22:04,858 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : Designated upload directory to use] *****************************************************************************************
2025-01-30 08:22:04,868 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:22:04,889 p=1511788 u=dvalin n=ansible | PLAY [localhost] **************************************************************************************************************************************
2025-01-30 08:22:04,899 p=1511788 u=dvalin n=ansible | TASK [Determine disk space] ***************************************************************************************************************************
2025-01-30 08:22:04,925 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : include dynamic info] *******************************************************************************************************
2025-01-30 08:22:04,937 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:22:04,941 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : Get the free space] *********************************************************************************************************
2025-01-30 08:22:06,198 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:22:06,202 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : Write upload dir to  ansible_run_vars.yml] **********************************************************************************
2025-01-30 08:22:06,397 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:22:06,401 p=1511788 u=dvalin n=ansible | TASK [upload_disk_space : Designated upload directory to use] *****************************************************************************************
2025-01-30 08:22:06,411 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:22:06,452 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:22:06,459 p=1511788 u=dvalin n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2025-01-30 08:22:08,173 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:08,192 p=1511788 u=dvalin n=ansible | TASK [init sys_terminate] *****************************************************************************************************************************
2025-01-30 08:22:08,201 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:08,208 p=1511788 u=dvalin n=ansible | TASK [install_pkgs] ***********************************************************************************************************************************
2025-01-30 08:22:08,253 p=1511788 u=dvalin n=ansible | TASK [install_packages : Remove any existing status file.] ********************************************************************************************
2025-01-30 08:22:09,403 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:09,410 p=1511788 u=dvalin n=ansible | TASK [install_packages : install yum packages] ********************************************************************************************************
2025-01-30 08:22:25,173 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:25,181 p=1511788 u=dvalin n=ansible | TASK [install_packages : Report Success] **************************************************************************************************************
2025-01-30 08:22:26,374 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:26,381 p=1511788 u=dvalin n=ansible | TASK [install_packages : install yum packages] ********************************************************************************************************
2025-01-30 08:22:26,395 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:26,403 p=1511788 u=dvalin n=ansible | TASK [Error check] ************************************************************************************************************************************
2025-01-30 08:22:26,417 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:26,424 p=1511788 u=dvalin n=ansible | TASK [install_packages : ubuntu package install] ******************************************************************************************************
2025-01-30 08:22:26,438 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:26,445 p=1511788 u=dvalin n=ansible | TASK [Error check] ************************************************************************************************************************************
2025-01-30 08:22:26,459 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:26,473 p=1511788 u=dvalin n=ansible | TASK [retrieve install package status] ****************************************************************************************************************
2025-01-30 08:22:26,515 p=1511788 u=dvalin n=ansible | TASK [retrieve_status : retrieve package status] ******************************************************************************************************
2025-01-30 08:22:27,619 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:27,632 p=1511788 u=dvalin n=ansible | TASK [Gather the rpm package facts] *******************************************************************************************************************
2025-01-30 08:22:29,544 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:29,584 p=1511788 u=dvalin n=ansible | TASK [pbench prep] ************************************************************************************************************************************
2025-01-30 08:22:29,660 p=1511788 u=dvalin n=ansible | TASK [pbench_prep : copy getconf.py] ******************************************************************************************************************
2025-01-30 08:22:32,839 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:32,862 p=1511788 u=dvalin n=ansible | TASK [pbench_prep : Install the epel repo key] ********************************************************************************************************
2025-01-30 08:22:34,471 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:34,492 p=1511788 u=dvalin n=ansible | TASK [pbench_prep : epel debug] ***********************************************************************************************************************
2025-01-30 08:22:34,511 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => {
    "rpm_status": {
        "changed": true,
        "failed": false
    }
}
2025-01-30 08:22:34,533 p=1511788 u=dvalin n=ansible | TASK [record epel key status] *************************************************************************************************************************
2025-01-30 08:22:34,600 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:22:35,722 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:35,772 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:22:35,788 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:35,829 p=1511788 u=dvalin n=ansible | TASK [pbench_prep : Install epel repo file] ***********************************************************************************************************
2025-01-30 08:22:39,666 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:39,687 p=1511788 u=dvalin n=ansible | TASK [record epel_rep_file status] ********************************************************************************************************************
2025-01-30 08:22:39,757 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:22:40,942 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:40,963 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:22:40,978 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:41,060 p=1511788 u=dvalin n=ansible | TASK [retrieve pbench prep status] ********************************************************************************************************************
2025-01-30 08:22:41,136 p=1511788 u=dvalin n=ansible | TASK [retrieve_status : retrieve package status] ******************************************************************************************************
2025-01-30 08:22:42,246 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:42,287 p=1511788 u=dvalin n=ansible | TASK [dev environment for uperf] **********************************************************************************************************************
2025-01-30 08:22:42,366 p=1511788 u=dvalin n=ansible | TASK [install dev tools] ******************************************************************************************************************************
2025-01-30 08:22:42,437 p=1511788 u=dvalin n=ansible | TASK [install_packages : Remove any existing status file.] ********************************************************************************************
2025-01-30 08:22:43,558 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:22:43,578 p=1511788 u=dvalin n=ansible | TASK [install_packages : install yum packages] ********************************************************************************************************
2025-01-30 08:24:46,869 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:46,915 p=1511788 u=dvalin n=ansible | TASK [install_packages : Report Success] **************************************************************************************************************
2025-01-30 08:24:48,287 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:48,308 p=1511788 u=dvalin n=ansible | TASK [install_packages : install yum packages] ********************************************************************************************************
2025-01-30 08:24:48,324 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:48,346 p=1511788 u=dvalin n=ansible | TASK [Error check] ************************************************************************************************************************************
2025-01-30 08:24:48,362 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:48,383 p=1511788 u=dvalin n=ansible | TASK [install_packages : ubuntu package install] ******************************************************************************************************
2025-01-30 08:24:48,398 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:48,420 p=1511788 u=dvalin n=ansible | TASK [Error check] ************************************************************************************************************************************
2025-01-30 08:24:48,436 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:48,496 p=1511788 u=dvalin n=ansible | TASK [retrieve dev env status] ************************************************************************************************************************
2025-01-30 08:24:48,575 p=1511788 u=dvalin n=ansible | TASK [retrieve_status : retrieve package status] ******************************************************************************************************
2025-01-30 08:24:49,850 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:49,952 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:49,962 p=1511788 u=dvalin n=ansible | TASK [Terminate on repo failure] **********************************************************************************************************************
2025-01-30 08:24:49,995 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:24:50,192 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:24:50,196 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:24:50,211 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:50,215 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:24:50,230 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:50,234 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:24:50,248 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:50,255 p=1511788 u=dvalin n=ansible | TASK [Terminate on dev env failure] *******************************************************************************************************************
2025-01-30 08:24:50,292 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:24:50,488 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:24:50,492 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:24:50,507 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:50,511 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:24:50,526 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:50,530 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:24:50,544 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:50,565 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:50,624 p=1511788 u=dvalin n=ansible | TASK [Read in dynamic information] ********************************************************************************************************************
2025-01-30 08:24:50,634 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:50,655 p=1511788 u=dvalin n=ansible | TASK [install pbench on server] ***********************************************************************************************************************
2025-01-30 08:24:50,664 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:50,709 p=1511788 u=dvalin n=ansible | TASK [install pbench on client] ***********************************************************************************************************************
2025-01-30 08:24:50,719 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:50,801 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:50,822 p=1511788 u=dvalin n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2025-01-30 08:24:52,679 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:52,738 p=1511788 u=dvalin n=ansible | TASK [Upload and install any rpms.] *******************************************************************************************************************
2025-01-30 08:24:52,813 p=1511788 u=dvalin n=ansible | TASK [install_rpms : include_rpms] ********************************************************************************************************************
2025-01-30 08:24:52,826 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:52,847 p=1511788 u=dvalin n=ansible | TASK [install_rpms : Load in configuration information] ***********************************************************************************************
2025-01-30 08:24:52,863 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:52,883 p=1511788 u=dvalin n=ansible | TASK [perform rpm upload] *****************************************************************************************************************************
2025-01-30 08:24:52,895 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => (item=none) 
2025-01-30 08:24:52,895 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:52,997 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:53,017 p=1511788 u=dvalin n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2025-01-30 08:24:54,867 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:54,946 p=1511788 u=dvalin n=ansible | TASK [install pbench tests] ***************************************************************************************************************************
2025-01-30 08:24:54,957 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:54,978 p=1511788 u=dvalin n=ansible | TASK [retrieve pbench test install status] ************************************************************************************************************
2025-01-30 08:24:54,988 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:55,070 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:55,081 p=1511788 u=dvalin n=ansible | TASK [Check results] **********************************************************************************************************************************
2025-01-30 08:24:55,090 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:55,109 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:55,168 p=1511788 u=dvalin n=ansible | TASK [update apts] ************************************************************************************************************************************
2025-01-30 08:24:55,178 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:55,199 p=1511788 u=dvalin n=ansible | TASK [install_pkgs] ***********************************************************************************************************************************
2025-01-30 08:24:55,209 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:55,293 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:55,352 p=1511788 u=dvalin n=ansible | TASK [install_pkgs] ***********************************************************************************************************************************
2025-01-30 08:24:55,362 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:55,468 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:55,526 p=1511788 u=dvalin n=ansible | TASK [retrieve install status] ************************************************************************************************************************
2025-01-30 08:24:55,583 p=1511788 u=dvalin n=ansible | TASK [retrieve_status : retrieve package status] ******************************************************************************************************
2025-01-30 08:24:56,881 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:56,982 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:56,993 p=1511788 u=dvalin n=ansible | TASK [determine pack failure] *************************************************************************************************************************
2025-01-30 08:24:57,043 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:24:57,239 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:24:57,243 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:24:57,255 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,260 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:24:57,271 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,275 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:24:57,286 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,307 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:57,367 p=1511788 u=dvalin n=ansible | TASK [Reboot system to have new os take effect, wait for it to come back] *****************************************************************************
2025-01-30 08:24:57,378 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:57,461 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:57,471 p=1511788 u=dvalin n=ansible | TASK [include dynamic info] ***************************************************************************************************************************
2025-01-30 08:24:57,481 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,485 p=1511788 u=dvalin n=ansible | TASK [set server ip] **********************************************************************************************************************************
2025-01-30 08:24:57,494 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,498 p=1511788 u=dvalin n=ansible | TASK [set server ip] **********************************************************************************************************************************
2025-01-30 08:24:57,508 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,512 p=1511788 u=dvalin n=ansible | TASK [add net hostname] *******************************************************************************************************************************
2025-01-30 08:24:57,521 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,542 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:57,555 p=1511788 u=dvalin n=ansible | TASK [Read the install hosts in and set them] *********************************************************************************************************
2025-01-30 08:24:57,565 p=1511788 u=dvalin n=ansible | skipping: [localhost] => (item=ec2-52-14-118-191.us-east-2.compute.amazonaws.com) 
2025-01-30 08:24:57,567 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,589 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:57,603 p=1511788 u=dvalin n=ansible | TASK [Read the test hosts in and set them] ************************************************************************************************************
2025-01-30 08:24:57,613 p=1511788 u=dvalin n=ansible | skipping: [localhost] => (item=ec2-52-14-118-191.us-east-2.compute.amazonaws.com) 
2025-01-30 08:24:57,614 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,635 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:24:57,645 p=1511788 u=dvalin n=ansible | TASK [install_cleanup] ********************************************************************************************************************************
2025-01-30 08:24:57,655 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:24:57,672 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:24:57,751 p=1511788 u=dvalin n=ansible | TASK [selinux config] *********************************************************************************************************************************
2025-01-30 08:24:57,817 p=1511788 u=dvalin n=ansible | TASK [selinux_config : stop apparmor] *****************************************************************************************************************
2025-01-30 08:24:57,832 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:57,853 p=1511788 u=dvalin n=ansible | TASK [selinux_config : disable apparmor] **************************************************************************************************************
2025-01-30 08:24:57,867 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:57,888 p=1511788 u=dvalin n=ansible | TASK [selinux_config : uninstall app armor] ***********************************************************************************************************
2025-01-30 08:24:57,903 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:57,924 p=1511788 u=dvalin n=ansible | TASK [selinux_config : reboot the system now for disabled aparmor to take effect] *********************************************************************
2025-01-30 08:24:57,939 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:57,960 p=1511788 u=dvalin n=ansible | TASK [selinux_config : install selinux on ubuntu] *****************************************************************************************************
2025-01-30 08:24:57,974 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:57,995 p=1511788 u=dvalin n=ansible | TASK [selinux_config : Activate selinux] **************************************************************************************************************
2025-01-30 08:24:58,009 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:58,030 p=1511788 u=dvalin n=ansible | TASK [selinux_config : reboot the system now for selinux to be enabled.] ******************************************************************************
2025-01-30 08:24:58,045 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:58,065 p=1511788 u=dvalin n=ansible | TASK [selinux_config : We want permissive for selinux] ************************************************************************************************
2025-01-30 08:24:58,079 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:58,101 p=1511788 u=dvalin n=ansible | TASK [selinux_config : We want enforcing for selinux] *************************************************************************************************
2025-01-30 08:24:58,115 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:58,136 p=1511788 u=dvalin n=ansible | TASK [selinux_config : reboot the system now to get the proper settings] ******************************************************************************
2025-01-30 08:24:58,151 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:58,172 p=1511788 u=dvalin n=ansible | TASK [selinux_config : Get the current selinux state.] ************************************************************************************************
2025-01-30 08:24:59,487 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:24:59,507 p=1511788 u=dvalin n=ansible | TASK [selinux_config : Get name of kernel] ************************************************************************************************************
2025-01-30 08:25:00,757 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,778 p=1511788 u=dvalin n=ansible | TASK [selinux_config : enable selinux RHEL/amazon] ****************************************************************************************************
2025-01-30 08:25:00,791 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,812 p=1511788 u=dvalin n=ansible | TASK [selinux_config : First get the line to replace] *************************************************************************************************
2025-01-30 08:25:00,824 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,845 p=1511788 u=dvalin n=ansible | TASK [selinux_config : Remove config_file] ************************************************************************************************************
2025-01-30 08:25:00,857 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,878 p=1511788 u=dvalin n=ansible | TASK [selinux_config : If we want to be enforcing] ****************************************************************************************************
2025-01-30 08:25:00,890 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,911 p=1511788 u=dvalin n=ansible | TASK [selinux_config : If we want to be permissive] ***************************************************************************************************
2025-01-30 08:25:00,923 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,944 p=1511788 u=dvalin n=ansible | TASK [selinux_config : If we want to be disabled via config] ******************************************************************************************
2025-01-30 08:25:00,956 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:00,977 p=1511788 u=dvalin n=ansible | TASK [selinux_config : Move the file if present] ******************************************************************************************************
2025-01-30 08:25:00,989 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:01,010 p=1511788 u=dvalin n=ansible | TASK [selinux_config : reboot the system now to enable selinux] ***************************************************************************************
2025-01-30 08:25:01,022 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:01,043 p=1511788 u=dvalin n=ansible | TASK [selinux_config : disabling selinux for RHEL/Amazon] *********************************************************************************************
2025-01-30 08:25:01,054 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:01,075 p=1511788 u=dvalin n=ansible | TASK [selinux_config : reboot the system now for disabled selinux to take effect] *********************************************************************
2025-01-30 08:25:01,086 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:01,210 p=1511788 u=dvalin n=ansible | PLAY [install_group] **********************************************************************************************************************************
2025-01-30 08:25:01,268 p=1511788 u=dvalin n=ansible | TASK [system_configuration] ***************************************************************************************************************************
2025-01-30 08:25:01,323 p=1511788 u=dvalin n=ansible | TASK [sys_config : Report what is being set] **********************************************************************************************************
2025-01-30 08:25:01,335 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => {
    "sysctl_settings": "none"
}
2025-01-30 08:25:01,356 p=1511788 u=dvalin n=ansible | TASK [sys_config : set_system_configuration] **********************************************************************************************************
2025-01-30 08:25:01,366 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:25:01,468 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:25:01,526 p=1511788 u=dvalin n=ansible | TASK [obtain various stats] ***************************************************************************************************************************
2025-01-30 08:26:22,649 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:22,671 p=1511788 u=dvalin n=ansible | TASK [obtain system config info] **********************************************************************************************************************
2025-01-30 08:26:24,284 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:24,305 p=1511788 u=dvalin n=ansible | TASK [retrieve boot time stats] ***********************************************************************************************************************
2025-01-30 08:26:25,916 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:25,937 p=1511788 u=dvalin n=ansible | TASK [retrieve system config info] ********************************************************************************************************************
2025-01-30 08:26:27,177 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:27,259 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:26:27,318 p=1511788 u=dvalin n=ansible | TASK [include dynamic info] ***************************************************************************************************************************
2025-01-30 08:26:27,330 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:27,415 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:26:27,474 p=1511788 u=dvalin n=ansible | TASK [include dynamic info] ***************************************************************************************************************************
2025-01-30 08:26:27,485 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:27,528 p=1511788 u=dvalin n=ansible | TASK [handle_existing_uploads] ************************************************************************************************************************
2025-01-30 08:26:27,590 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : Check to see if the directory exist.] ************************************************************************************
2025-01-30 08:26:28,833 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:28,854 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : Check to see if the zathras use file  exist.] ****************************************************************************
2025-01-30 08:26:28,868 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:28,889 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : move dir if required] ****************************************************************************************************
2025-01-30 08:26:28,903 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:28,924 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : Make the uploads directory] **********************************************************************************************
2025-01-30 08:26:30,315 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:30,336 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : touch the zathras_upload_file] *******************************************************************************************
2025-01-30 08:26:31,593 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:31,614 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : link the extras in] ******************************************************************************************************
2025-01-30 08:26:32,874 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:33,000 p=1511788 u=dvalin n=ansible | PLAY [localhost] **************************************************************************************************************************************
2025-01-30 08:26:33,005 p=1511788 u=dvalin n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2025-01-30 08:26:33,880 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:33,916 p=1511788 u=dvalin n=ansible | TASK [upload extra files] *****************************************************************************************************************************
2025-01-30 08:26:33,957 p=1511788 u=dvalin n=ansible | TASK [upload_extra : include_extra_uploads] ***********************************************************************************************************
2025-01-30 08:26:33,968 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:33,982 p=1511788 u=dvalin n=ansible | TASK [upload_extra : Load in configuration information] ***********************************************************************************************
2025-01-30 08:26:33,994 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:34,006 p=1511788 u=dvalin n=ansible | TASK [upload_extra : Record default status of update sucess] ******************************************************************************************
2025-01-30 08:26:34,196 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:34,209 p=1511788 u=dvalin n=ansible | TASK [Upload extra files] *****************************************************************************************************************************
2025-01-30 08:26:34,253 p=1511788 u=dvalin n=ansible | TASK [upload_extra_files : include_extra_uploads] *****************************************************************************************************
2025-01-30 08:26:34,264 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:34,277 p=1511788 u=dvalin n=ansible | TASK [upload_extra_files : Load in configuration information] *****************************************************************************************
2025-01-30 08:26:34,289 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:34,302 p=1511788 u=dvalin n=ansible | TASK [Upload the extra files] *************************************************************************************************************************
2025-01-30 08:26:34,313 p=1511788 u=dvalin n=ansible | skipping: [localhost] => (item=none) 
2025-01-30 08:26:34,314 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:34,421 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:26:34,480 p=1511788 u=dvalin n=ansible | TASK [include dynamic info] ***************************************************************************************************************************
2025-01-30 08:26:34,492 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:34,513 p=1511788 u=dvalin n=ansible | TASK [handle existing workloads dir] ******************************************************************************************************************
2025-01-30 08:26:34,575 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : Check to see if the directory exist.] ************************************************************************************
2025-01-30 08:26:35,880 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:35,901 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : Check to see if the zathras use file  exist.] ****************************************************************************
2025-01-30 08:26:35,915 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:35,936 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : move dir if required] ****************************************************************************************************
2025-01-30 08:26:35,950 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:35,972 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : Make the uploads directory] **********************************************************************************************
2025-01-30 08:26:37,228 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:37,248 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : touch the zathras_upload_file] *******************************************************************************************
2025-01-30 08:26:38,502 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:38,524 p=1511788 u=dvalin n=ansible | TASK [existing_uploads_dir : link the extras in] ******************************************************************************************************
2025-01-30 08:26:39,784 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:39,888 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:26:39,923 p=1511788 u=dvalin n=ansible | TASK [retrieve the test] ******************************************************************************************************************************
2025-01-30 08:26:39,989 p=1511788 u=dvalin n=ansible | TASK [retrieve_test : test retrieve include dynamic variables] ****************************************************************************************
2025-01-30 08:26:40,000 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:40,012 p=1511788 u=dvalin n=ansible | TASK [retrieve_test : include_test_description] *******************************************************************************************************
2025-01-30 08:26:40,024 p=1511788 u=dvalin n=ansible | ok: [localhost]
2025-01-30 08:26:40,037 p=1511788 u=dvalin n=ansible | TASK [retrieve_test : copy git file in] ***************************************************************************************************************
2025-01-30 08:26:40,694 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:26:40,706 p=1511788 u=dvalin n=ansible | TASK [Record status of copy git file config success] **************************************************************************************************
2025-01-30 08:26:40,749 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run success] ***************************************************************************************************
2025-01-30 08:26:40,946 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:26:40,958 p=1511788 u=dvalin n=ansible | TASK [record_status : Record status of run failure] ***************************************************************************************************
2025-01-30 08:26:40,969 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:40,994 p=1511788 u=dvalin n=ansible | TASK [Terminate on repo failure] **********************************************************************************************************************
2025-01-30 08:26:41,043 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:26:41,233 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:26:41,246 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:26:41,255 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,268 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:26:41,277 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,290 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:26:41,299 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,323 p=1511788 u=dvalin n=ansible | TASK [retrieve_test : local test run] *****************************************************************************************************************
2025-01-30 08:26:41,332 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,357 p=1511788 u=dvalin n=ansible | TASK [Terminate on retrieve_test error] ***************************************************************************************************************
2025-01-30 08:26:41,406 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Read status file] **********************************************************************************************************
2025-01-30 08:26:41,596 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:26:41,609 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:26:41,619 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,631 p=1511788 u=dvalin n=ansible | TASK [terminate_on_error : Aborting test] *************************************************************************************************************
2025-01-30 08:26:41,640 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,653 p=1511788 u=dvalin n=ansible | TASK [Log failure] ************************************************************************************************************************************
2025-01-30 08:26:41,662 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:41,746 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:26:41,805 p=1511788 u=dvalin n=ansible | TASK [retrieve system configuration] ******************************************************************************************************************
2025-01-30 08:26:41,860 p=1511788 u=dvalin n=ansible | TASK [retrieve_sys_config : create sys_config_out_dir] ************************************************************************************************
2025-01-30 08:26:43,177 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:43,198 p=1511788 u=dvalin n=ansible | TASK [retrieve_sys_config : rhel_sysconfig obtain] ****************************************************************************************************
2025-01-30 08:26:57,549 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:57,610 p=1511788 u=dvalin n=ansible | TASK [retrieve sys config info] ***********************************************************************************************************************
2025-01-30 08:26:58,936 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:59,018 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:26:59,053 p=1511788 u=dvalin n=ansible | TASK [Add test start file file.] **********************************************************************************************************************
2025-01-30 08:26:59,246 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:26:59,296 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:26:59,331 p=1511788 u=dvalin n=ansible | TASK [end it] *****************************************************************************************************************************************
2025-01-30 08:26:59,341 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:26:59,392 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:26:59,474 p=1511788 u=dvalin n=ansible | TASK [include dynamic info] ***************************************************************************************************************************
2025-01-30 08:26:59,486 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:26:59,507 p=1511788 u=dvalin n=ansible | TASK [delete the timing file if it exists] ************************************************************************************************************
2025-01-30 08:27:00,825 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:00,846 p=1511788 u=dvalin n=ansible | TASK [execute remote tests] ***************************************************************************************************************************
2025-01-30 08:27:00,908 p=1511788 u=dvalin n=ansible | TASK [execute the test] *******************************************************************************************************************************
2025-01-30 08:27:00,921 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => (item=coremark) 
2025-01-30 08:27:00,922 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:00,944 p=1511788 u=dvalin n=ansible | TASK [execute test] ***********************************************************************************************************************************
2025-01-30 08:27:01,013 p=1511788 u=dvalin n=ansible | TASK [test_execute : include dynamic variables for text execution] ************************************************************************************
2025-01-30 08:27:01,028 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:01,050 p=1511788 u=dvalin n=ansible | TASK [test_execute : include_test_file] ***************************************************************************************************************
2025-01-30 08:27:01,067 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:01,087 p=1511788 u=dvalin n=ansible | TASK [test_execute : grab test start time] ************************************************************************************************************
2025-01-30 08:27:02,369 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,389 p=1511788 u=dvalin n=ansible | TASK [test_execution] *********************************************************************************************************************************
2025-01-30 08:27:02,479 p=1511788 u=dvalin n=ansible | TASK [test_generic : include_test_data_file] **********************************************************************************************************
2025-01-30 08:27:02,498 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,519 p=1511788 u=dvalin n=ansible | TASK [test_generic : Copy start script to test system] ************************************************************************************************
2025-01-30 08:27:02,532 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,553 p=1511788 u=dvalin n=ansible | TASK [test_generic : execute the pre script] **********************************************************************************************************
2025-01-30 08:27:02,566 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,587 p=1511788 u=dvalin n=ansible | TASK [test_generic : include_test_file] ***************************************************************************************************************
2025-01-30 08:27:02,605 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,627 p=1511788 u=dvalin n=ansible | TASK [test_generic : include dynamic variables] *******************************************************************************************************
2025-01-30 08:27:02,644 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,665 p=1511788 u=dvalin n=ansible | TASK [test_generic : handle local operations] *********************************************************************************************************
2025-01-30 08:27:02,678 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,700 p=1511788 u=dvalin n=ansible | TASK [test_generic : handle remote operations] ********************************************************************************************************
2025-01-30 08:27:02,718 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:02,739 p=1511788 u=dvalin n=ansible | TASK [test_generic : Ensure directory exists] *********************************************************************************************************
2025-01-30 08:27:04,034 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:04,054 p=1511788 u=dvalin n=ansible | TASK [test_generic : copy git tar up] *****************************************************************************************************************
2025-01-30 08:27:06,763 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:06,784 p=1511788 u=dvalin n=ansible | TASK [test_generic : Reboot system before test] *******************************************************************************************************
2025-01-30 08:27:06,800 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:06,821 p=1511788 u=dvalin n=ansible | TASK [test_generic : report local type] ***************************************************************************************************************
2025-01-30 08:27:06,838 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => {
    "msg": "local type: remote"
}
2025-01-30 08:27:06,860 p=1511788 u=dvalin n=ansible | TASK [test_generic : Get current time] ****************************************************************************************************************
2025-01-30 08:27:08,086 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:08,108 p=1511788 u=dvalin n=ansible | TASK [Move old results to archive] ********************************************************************************************************************
2025-01-30 08:27:08,221 p=1511788 u=dvalin n=ansible | TASK [archive_exist_data : Create the directory for saving results] ***********************************************************************************
2025-01-30 08:27:09,486 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:09,507 p=1511788 u=dvalin n=ansible | TASK [archive_exist_data : obtain list of results] ****************************************************************************************************
2025-01-30 08:27:10,738 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:10,759 p=1511788 u=dvalin n=ansible | TASK [archive_exist_data : mv the files] **************************************************************************************************************
2025-01-30 08:27:10,768 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:10,809 p=1511788 u=dvalin n=ansible | TASK [test_generic : command running] *****************************************************************************************************************
2025-01-30 08:27:10,828 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => {
    "msg": "/home/ec2-user/workloads/coremark-wrapper-1.22/coremark/coremark_run --run_user ec2-user --home_parent /home --iterations 1 --tuned_setting tuned_none_sys_file_ --host_config \"m5a.xlarge\" --sysname \"m5a.xlarge\" --sys_type aws --iterations 5"
}
2025-01-30 08:27:10,849 p=1511788 u=dvalin n=ansible | TASK [test_generic : record the shell using] **********************************************************************************************************
2025-01-30 08:27:12,082 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:12,103 p=1511788 u=dvalin n=ansible | TASK [test_generic : provide the command running] *****************************************************************************************************
2025-01-30 08:27:13,334 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:13,378 p=1511788 u=dvalin n=ansible | TASK [test_generic : Make runnable] *******************************************************************************************************************
2025-01-30 08:27:14,608 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:14,629 p=1511788 u=dvalin n=ansible | TASK [test_generic : retrieve the command file] *******************************************************************************************************
2025-01-30 08:27:15,848 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:27:15,870 p=1511788 u=dvalin n=ansible | TASK [test_generic : execute the test] ****************************************************************************************************************
2025-01-30 08:32:25,872 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:25,894 p=1511788 u=dvalin n=ansible | TASK [test_generic : What we are looking for] *********************************************************************************************************
2025-01-30 08:32:25,915 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com] => {
    "msg": "/tmp/results_coremark.zip"
}
2025-01-30 08:32:25,936 p=1511788 u=dvalin n=ansible | TASK [test_generic : retrieve data] *******************************************************************************************************************
2025-01-30 08:32:27,253 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,275 p=1511788 u=dvalin n=ansible | TASK [test_generic : Reboot system after test] ********************************************************************************************************
2025-01-30 08:32:27,291 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,312 p=1511788 u=dvalin n=ansible | TASK [test_generic : Copy post op script to test system] **********************************************************************************************
2025-01-30 08:32:27,325 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,368 p=1511788 u=dvalin n=ansible | TASK [test_generic : execute the pre script] **********************************************************************************************************
2025-01-30 08:32:27,381 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,402 p=1511788 u=dvalin n=ansible | TASK [test_generic : We failed] ***********************************************************************************************************************
2025-01-30 08:32:27,415 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,437 p=1511788 u=dvalin n=ansible | TASK [test_generic : Add the line] ********************************************************************************************************************
2025-01-30 08:32:27,449 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,470 p=1511788 u=dvalin n=ansible | TASK [test_generic : retrieve the failure file] *******************************************************************************************************
2025-01-30 08:32:27,483 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:27,524 p=1511788 u=dvalin n=ansible | TASK [test_execute : grab test end time] **************************************************************************************************************
2025-01-30 08:32:28,807 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:28,828 p=1511788 u=dvalin n=ansible | TASK [test_execute : record test date] ****************************************************************************************************************
2025-01-30 08:32:30,094 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:30,115 p=1511788 u=dvalin n=ansible | TASK [test_execute : retrieve test time] **************************************************************************************************************
2025-01-30 08:32:31,355 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:31,438 p=1511788 u=dvalin n=ansible | TASK [Add completion file.] ***************************************************************************************************************************
2025-01-30 08:32:32,692 p=1511788 u=dvalin n=ansible | changed: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:32,775 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:32:32,810 p=1511788 u=dvalin n=ansible | TASK [Add test complete file.] ************************************************************************************************************************
2025-01-30 08:32:33,010 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:32:33,060 p=1511788 u=dvalin n=ansible | PLAY [localhost] **************************************************************************************************************************************
2025-01-30 08:32:33,095 p=1511788 u=dvalin n=ansible | TASK [test local test] ********************************************************************************************************************************
2025-01-30 08:32:33,104 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:32:33,179 p=1511788 u=dvalin n=ansible | PLAY [test_group] *************************************************************************************************************************************
2025-01-30 08:32:33,238 p=1511788 u=dvalin n=ansible | TASK [See if uploads_back_zathras_exists] *************************************************************************************************************
2025-01-30 08:32:34,514 p=1511788 u=dvalin n=ansible | ok: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:34,536 p=1511788 u=dvalin n=ansible | TASK [First remove the uploads we created.] ***********************************************************************************************************
2025-01-30 08:32:34,545 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:34,565 p=1511788 u=dvalin n=ansible | TASK [Restore the original uploads] *******************************************************************************************************************
2025-01-30 08:32:34,574 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:34,596 p=1511788 u=dvalin n=ansible | TASK [See if workloads_back_zathras_exists] ***********************************************************************************************************
2025-01-30 08:32:34,610 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:34,631 p=1511788 u=dvalin n=ansible | TASK [First remove the workloads we created.] *********************************************************************************************************
2025-01-30 08:32:34,645 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:34,667 p=1511788 u=dvalin n=ansible | TASK [Restore the original workloads] *****************************************************************************************************************
2025-01-30 08:32:34,681 p=1511788 u=dvalin n=ansible | skipping: [ec2-52-14-118-191.us-east-2.compute.amazonaws.com]
2025-01-30 08:32:34,765 p=1511788 u=dvalin n=ansible | PLAY [local] ******************************************************************************************************************************************
2025-01-30 08:32:34,821 p=1511788 u=dvalin n=ansible | TASK [terminate start time] ***************************************************************************************************************************
2025-01-30 08:32:35,015 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:32:35,028 p=1511788 u=dvalin n=ansible | TASK [Terraform terminate] ****************************************************************************************************************************
2025-01-30 08:32:35,077 p=1511788 u=dvalin n=ansible | TASK [tf_delete : terraform create delete plan] *******************************************************************************************************
2025-01-30 08:32:40,939 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:32:40,951 p=1511788 u=dvalin n=ansible | TASK [tf_delete : terraform delete] *******************************************************************************************************************
2025-01-30 08:33:55,871 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:33:55,886 p=1511788 u=dvalin n=ansible | TASK [tf_delete : remove the destroy plan] ************************************************************************************************************
2025-01-30 08:33:55,900 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:33:55,913 p=1511788 u=dvalin n=ansible | TASK [Retry the destroy] ******************************************************************************************************************************
2025-01-30 08:33:55,927 p=1511788 u=dvalin n=ansible | skipping: [localhost]
2025-01-30 08:33:55,951 p=1511788 u=dvalin n=ansible | TASK [terminate end time] *****************************************************************************************************************************
2025-01-30 08:33:57,147 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:33:57,159 p=1511788 u=dvalin n=ansible | TASK [Report termination time] ************************************************************************************************************************
2025-01-30 08:33:57,375 p=1511788 u=dvalin n=ansible | changed: [localhost]
2025-01-30 08:33:57,445 p=1511788 u=dvalin n=ansible | PLAY RECAP ********************************************************************************************************************************************
2025-01-30 08:33:57,445 p=1511788 u=dvalin n=ansible | ec2-52-14-118-191.us-east-2.compute.amazonaws.com : ok=88   changed=53   unreachable=0    failed=0    skipped=79   rescued=0    ignored=0   
2025-01-30 08:33:57,445 p=1511788 u=dvalin n=ansible | localhost                  : ok=137  changed=89   unreachable=0    failed=0    skipped=102  rescued=0    ignored=0   
