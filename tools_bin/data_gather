#!/bin/bash
#
# General information
#
date
echo ==============================================
echo General information
echo ==============================================
echo system name: `hostname`
echo release: `cat /etc/*release | grep PRETTY_NAME | cut -d'"' -f 2`a  `uname -a | cut -d ' ' -f 3`
#
# Hardware information
#
echo ==============================================
echo Hardware information
echo ==============================================
lscpu > /tmp/lscpu.tmp
model_name=`grep "Model name" /tmp/lscpu.tmp`
arch=`grep Architecture: /tmp/lscpu.tmp | cut -d':' -f2`
cpus=`grep ^CPU\(s\) /tmp/lscpu.tmp`
on_line=`grep ^On-line /tmp/lscpu.tmp | cut -d':' -f 2`
echo Architecture: $arch 
echo Product: `dmidecode -s system-product-name`
echo BIOS information: `dmidecode -s bios-vendor` `dmidecode -s bios-version`
echo processor information: `dmidecode -s processor-version | sort -u`
echo CPUS present: $cpus
echo CPUS on line: $on_line
echo Numa CPU allocation:
grep "^NUMA node" /tmp/lscpu.tmp

echo ==============================================
echo Memory information
echo ==============================================
cat /proc/meminfo | grep -E "MemTotal:|Hugepagesize:|HardwareCorrupted:"
echo Numa memory per node
numactl --hardware | grep size
#
# Provide the boot command/options.
#
echo ==============================================
echo Boot options
cat /proc/cmdline

#
# Provide the current active tuned config
#
echo ==============================================
echo Tuned `tuned-adm active | grep Current`

#
# selinux settings check.
#
echo ==============================================
sestatus | grep "SELinux status"

#
# Disk information
#
echo ==============================================
echo Disk information
for i in `partprobe -s | cut -d: -f 1`
do
echo $i   `udevadm info --query=all $i | grep ID_MODEL | cut -d: -f 2`
done
#
# Sanity check for filesystems mounted on top of eachother.
#
echo ==============================================
echo Checking for mount overlays
cat /proc/mounts > /tmp/data_gather.tmp
number_mounts=`wc -l /tmp/data_gather.tmp | cut -d' ' -f 1 `
unique_mounts=`sort -u /tmp/data_gather.tmp | wc -l | cut -d' ' -f 1 `
if [ "$number_mounts" != "$unique_mounts" ]; then
	cut  -d ' ' -f 2 /tmp/data_gather.tmp | sort >/tmp/data_gather.tmp_1
	sort -u /tmp/data_gather.tmp_1 >  /tmp/data_gather.tmp_1_unique
	echo Multiple mounts of following points
	diff /tmp/data_gather.tmp_1 /tmp/data_gather.tmp_1_unique | grep \< | cut -d' ' -f 2
	rm /tmp/data_gather.tmp_1 /tmp/data_gather.tmp_1_unique
else
	echo All single mount points
fi
rm /tmp/data_gather.tmp
#
# Give mounted filesystems, with options
#
echo ==============================================
echo mounted filesystems
mount
