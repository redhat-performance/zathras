#!/bin/bash
find . -name ansible_vars_main.yml -print > ans_files
cut -d '/' -f 2 ans_files | rev | cut -d_  -f 2- | rev | sort -u > systems

rm -f initial_summary all_sys test_summary expected_test missing_test failed_test test_errors

curdir=`pwd`
while IFS= read -r sys
do
	grep test_to_run ${sys}*/ansible_vars_main.yml | cut -d'[' -f 2 | cut -d ']' -f 1 | sed "s/,/\n/g" | sed "s/pbench_//g" | sort -u > expected_test
	while IFS= read -r expt_test
        do
		rm -rf tar_check 2> /dev/null
		mkdir tar_check
		tball=`ls -rt ${sys}*/results*${expt_test}_*tar | tail -1 2> /dev/null`
		if [ $? -ne 0 ]; then
			echo "Missing: $sys $expt_test" >> ${curdir}/missing_test
			continue
		fi
		#
		# Untar test results, verify worked.
		#
		cd tar_check
		file=`tar tvf ../$tball 2> /dev/null | grep test_results_report | awk  '{print $6}' | rev | cut -d' '  -f1 | rev`
		tar xf ../$tball $file 2> /dev/null
		grep -q Ran $file
		if [ $? -ne 0 ]; then
			echo "Failed: $sys $expt_test" >> ${curdir}/failed_test
		fi
		rm -rf tar_check
		cd ..
	done < "expected_test"
done < "systems"

if [ -f ${curdir}/missing_test ]; then
	while IFS= read -r sys
	do
		list=`grep $sys missing_test`
		missing_test=`echo $list | sed "s/Missing: $sys //g"`
		if [[ $list != "" ]]; then
			echo missing:$sys:$missing_test >> test_errors
		fi
	done < ${curdir}/systems
fi
if [ -f ${curdir}/failed_test ]; then
	while IFS= read -r sys
	do
		while IFS= read -r expt_test
		do
			list=`grep $sys failed_test | grep $expt_test`
			if [[ $list != "" ]]; then
				failed_test=`echo $list | sed "s/Failed: $sys //g"`
				echo failed:$sys:$failed_test >> test_errors
			fi
		done < expected_test
	done < ${curdir}/systems
fi

if [[ -f test_errors ]]; then
	blink=$(tput blink)
	normal=$(tput sgr0)
	echo ${blink}Test Failures${normal}
	cat test_errors
	exit 1
else
	echo All tests executed sucessfully
	exit 0
fi
