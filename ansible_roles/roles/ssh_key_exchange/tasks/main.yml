---
#
# Ubuntu is a bit of a pain with netplan.  Issue ifconfig here in hopes
# of having the ip stick.
#

- name: Ubuntu net config
  block:
  - name: Ensure net-tools is installed host 0
    delegate_to: "{{ ip_list[0] }}"
    become: yes
    apt:
      name: net-tools
      state: present
  - name: Ensure net-tools is installed host 1
    delegate_to: "{{ ip_list[1] }}"
    become: yes
    apt:
      name: net-tools
      state: present

  #
  # Get the network interface, and then assign the ip to it.
  # Notes
  # 
  # Assumption is only one unconfigured network
  - name: ifconfig host 0
    delegate_to: "{{ ip_list[0] }}"
    become: yes
    shell: "ifconfig `ifconfig -a | grep flags | grep -v UP | cut -d: -f1` 10.0.25.100 netmask 255.255.255.0"

  - name: ifconfig host 1
    delegate_to: "{{ ip_list[1] }}"
    become: yes
    shell: "ifconfig `ifconfig -a | grep flags | grep -v UP | cut -d: -f1` 10.0.25.101 netmask 255.255.255.0"
  when: config_info.os_vendor == "ubuntu"

  # tasks file for roles/ssh_key_exchange
# tasks file for roles/ssh_key_exchange
- name: SSH KeyGen command
  delegate_to: "{{ item }}"
  become: yes
  shell: > 
    ssh-keygen -q -b 2048 -t rsa -N "" -C "creating SSH" -f ~/.ssh/id_rsa
    creates="~/.ssh/id_rsa"
  with_items:
    - "{{ ip_list }}"

- name: Fetch the keyfile from one server to another
  delegate_to: "{{ item }}"
  become: yes
  fetch:
    src: "~/.ssh/id_rsa.pub"
    dest: "buffer/{{item}}-id_rsa.pub"
    flat: yes
  with_items:
    - "{{ ip_list }}"

- name: Copy the key add to authorized_keys using Ansible module
  delegate_to: "{{ ip_list[0] }}"
  become: yes
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file','buffer/{{ ip_list[1] }}-id_rsa.pub')}}"

- name: Copy the key add to authorized_keys using Ansible module
  delegate_to: "{{ ip_list[1] }}"
  become: yes
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file','buffer/{{ ip_list[0] }}-id_rsa.pub')}}"

- name: Copy the key add to authorized_keys using Ansible module
  delegate_to: "{{ ip_list[0] }}"
  become: yes
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file','buffer/{{ ip_list[0] }}-id_rsa.pub')}}"

- name: Copy the key add to authorized_keys using Ansible module
  delegate_to: "{{ ip_list[1] }}"
  become: yes
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file','buffer/{{ ip_list[1] }}-id_rsa.pub')}}"

- name: Permit root login
  delegate_to: "{{ item }}"
  become: yes
  lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^PermitRootLogin'
    line: PermitRootLogin yes
  with_items:
    - "{{ ip_list }}"

#
# If we restart the sshd service with ubuntu, we lose connectivty.
#
- name: restart sshd service
  block:
  - name:  restart sshd service if not ubuntu.
    delegate_to: "{{ item }}"
    become: yes
    systemd:
      name: sshd
      state: restarted
    with_items:
      - "{{ ip_list }}"
  when: config_info.os_vendor != "ubuntu"

- name: Make sure we can ssh in to net1 from net2
  delegate_to: "{{ ip_list[1] }}"
  become: yes
  shell: "ssh -oStrictHostKeyChecking=no  root@{{ ip_list[0] }} 'cat /etc/passwd'"
  register: ignore

- name: Make sure we can ssh in net2 from net1
  delegate_to: "{{ ip_list[0] }}"
  become: yes
  shell: "ssh -oStrictHostKeyChecking=no  root@{{ ip_list[1] }} 'cat /etc/passwd'"
  register: ignore
