---
#
# Setup the disks.  Due to the way aws works, we have to have one entry
# for each system,
#
# Variables passed in:
#       instance_type: "aws_instance_request" or "aws_spot_instance_request"
#       index_in: system index
#
- name: Add disk information
  block:
  - name: Creat disks.tf
    shell: "sed \"s/REPLACE_INSTANCE_ID/{{ instance_id }}/g\" < {{ config_info.local_run_dir }}/ansible_roles/roles/aws_create/files/tf/disks_template.tf | sed \"s/REPLACE_INDEX/{{ index_in}}/g\" | sed \"s/REPLACE_INST/{{ instance_type }}/g\" >> {{ working_dir }}/tf/disks.tf"
  - name: If no iops
    block:
    - name: remove entry
      shell: grep -v iops {{ working_dir }}/tf/disks.tf > {{ working_dir }}/tf/disks.tf_new
    - name: replace the disks_tf file
      shell: mv {{ working_dir }}/tf/disks.tf_new {{ working_dir }}/tf/disks.tf
    when: config_info.disk_iops == 0
  - name: If no tp
    block:
    - name: remove entry
      shell: grep -v throughput {{ working_dir }}/tf/disks.tf > {{ working_dir }}/tf/disks.tf_new
    - name: replace the disks_tf file
      shell: mv {{ working_dir }}/tf/disks.tf_new {{ working_dir }}/tf/disks.tf
    when: config_info.disk_tp == 0
  when: "'0:na:na:0' not in config_info.cloud_disks"
