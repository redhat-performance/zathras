name: Update parent issue

permissions:
  issues: write

env:
  REMOVE_ISSUES: --remove-label pr_approved --remove-label pr_review --remove-label pr_inprogress
  GH_TOKEN: ${{ github.token }}

on:
  workflow_call:
  pull_request:
    types:
      - review_requested
  pull_request_review:
    types:
      - submitted
jobs:
  update_parent_issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get PR number on issue type
        if: github.event_name == 'pull_request_review'
        run: echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> "$GITHUB_ENV"

      - name: Get PR number on PR event
        if: github.event_name == 'pull_request_target'
        run: echo "PR_NUMBER=${{ github.event.number }}" >> "$GITHUB_ENV"

      - name: Get parent issues
        shell: bash
        run: |
          mentioned_issues=$(gh pr view "$PR_NUMBER" --json body | jq -r .body | grep -Eo '#[0-9]+' | sed -e 's/#//g')
          
          echo PARENT_ISSUES=$(
            for issue in $mentioned_issues; do
              if gh issue view "$issue" --json id > /dev/null; then
                echo -n "$issue "
              fi
            done
          ) >> "$GITHUB_ENV"


      - name: Fail when unable to find a parent issue
        if: env.PARENT_ISSUES == ''
        run: echo "Could not find a parent issue" && exit 1

      - name: See if PR needs changes
        run: >
          echo PR_STATE=$(
            gh pr view "$PR_NUMBER" --json latestReviews |
            jq -r '.latestReviews[].state' && echo "in_progress"
            || echo ""
          ) >> "$GITHUB_ENV"

      - name: Get number of pending reviews
        if: env.PR_STATE == ""
        run: >
          echo PENDING_REVIEWS=$(
            gh pr view "$PR_NUMBER" --json reviewRequests | jq '.reviewRequests | length'
          ) >> "$GITHUB_ENV"

      - name: Set in progress state
        if: env.PENDING_REVIEWS > 0
        run: echo PR_STATE="pr_inprogress"

      - name: Set review state
        if: env.PR_STATE == ""
        run: echo PR_STATE="pr_review"


      - name: Set parent issues state
        run: > 
          for issue in $PARENT_ISSUES; do
            echo "Updating $issue to $PR_STATE" &&
            gh issue edit $issue $REMOVE_ISSUES && 
            gh issue edit $issue --add-label=$PR_STATE
          done
        
